//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FXSupplierPortal
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FSPPOEntities : DbContext
    {
        public FSPPOEntities()
            : base("name=FSPPOEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<A_Attachment> A_Attachment { get; set; }
        public virtual DbSet<A_CONTRACT> A_CONTRACT { get; set; }
        public virtual DbSet<A_CONTRACTREF> A_CONTRACTREF { get; set; }
        public virtual DbSet<A_PO> A_PO { get; set; }
        public virtual DbSet<A_PODefination> A_PODefination { get; set; }
        public virtual DbSet<A_POLINE> A_POLINE { get; set; }
        public virtual DbSet<A_POPERMISSION> A_POPERMISSION { get; set; }
        public virtual DbSet<A_POSignature> A_POSignature { get; set; }
        public virtual DbSet<A_POSignatureTemplate> A_POSignatureTemplate { get; set; }
        public virtual DbSet<A_POTEMPLATE> A_POTEMPLATE { get; set; }
        public virtual DbSet<A_Registration> A_Registration { get; set; }
        public virtual DbSet<A_RegSupplierAddress> A_RegSupplierAddress { get; set; }
        public virtual DbSet<A_Supplier> A_Supplier { get; set; }
        public virtual DbSet<A_SupplierAddress> A_SupplierAddress { get; set; }
        public virtual DbSet<A_SupplierBankingDetails> A_SupplierBankingDetails { get; set; }
        public virtual DbSet<A_UserOrg> A_UserOrg { get; set; }
        public virtual DbSet<A_UserProjects> A_UserProjects { get; set; }
        public virtual DbSet<A_Users> A_Users { get; set; }
        public virtual DbSet<A_UserSecurityGroup> A_UserSecurityGroup { get; set; }
        public virtual DbSet<ActivityLog> ActivityLogs { get; set; }
        public virtual DbSet<Attachment> Attachments { get; set; }
        public virtual DbSet<ChangeRequest> ChangeRequests { get; set; }
        public virtual DbSet<ChangeRequestDetail> ChangeRequestDetails { get; set; }
        public virtual DbSet<CONTRACT> CONTRACTs { get; set; }
        public virtual DbSet<CONTRACTREF> CONTRACTREFs { get; set; }
        public virtual DbSet<ContractStatusHistory> ContractStatusHistories { get; set; }
        public virtual DbSet<ControlFieldREL> ControlFieldRELs { get; set; }
        public virtual DbSet<FieldHelp> FieldHelps { get; set; }
        public virtual DbSet<FieldLabel> FieldLabels { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<NotificationTemplate> NotificationTemplates { get; set; }
        public virtual DbSet<OrgRole> OrgRoles { get; set; }
        public virtual DbSet<PO> POes { get; set; }
        public virtual DbSet<PODefination> PODefinations { get; set; }
        public virtual DbSet<POLINE> POLINEs { get; set; }
        public virtual DbSet<POPERMISSION> POPERMISSIONs { get; set; }
        public virtual DbSet<POREVISIONHISTORY> POREVISIONHISTORies { get; set; }
        public virtual DbSet<POSignature> POSignatures { get; set; }
        public virtual DbSet<POSignatureTemplate> POSignatureTemplates { get; set; }
        public virtual DbSet<POSTATUSHISTORY> POSTATUSHISTORies { get; set; }
        public virtual DbSet<POTEMPLATE> POTEMPLATEs { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Registration> Registrations { get; set; }
        public virtual DbSet<RegistrationStatusHistory> RegistrationStatusHistories { get; set; }
        public virtual DbSet<RegSupplierAddress> RegSupplierAddresses { get; set; }
        public virtual DbSet<SS_ALNDomain> SS_ALNDomain { get; set; }
        public virtual DbSet<SS_LookUpMap> SS_LookUpMap { get; set; }
        public virtual DbSet<SS_Messages> SS_Messages { get; set; }
        public virtual DbSet<SS_NumDomain> SS_NumDomain { get; set; }
        public virtual DbSet<SS_Pages> SS_Pages { get; set; }
        public virtual DbSet<SS_Permission> SS_Permission { get; set; }
        public virtual DbSet<SS_SecurityGroup> SS_SecurityGroup { get; set; }
        public virtual DbSet<SS_SecurityGroupPermission> SS_SecurityGroupPermission { get; set; }
        public virtual DbSet<SS_UserLoginActivity> SS_UserLoginActivity { get; set; }
        public virtual DbSet<SS_UserSecurityGroup> SS_UserSecurityGroup { get; set; }
        public virtual DbSet<STG_FIRMS_SUPPLIER> STG_FIRMS_SUPPLIER { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<SupplierAddress> SupplierAddresses { get; set; }
        public virtual DbSet<SupplierBankingDetail> SupplierBankingDetails { get; set; }
        public virtual DbSet<SupplierStatusHistory> SupplierStatusHistories { get; set; }
        public virtual DbSet<SupplierUser> SupplierUsers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TAXCODE> TAXCODES { get; set; }
        public virtual DbSet<UserOrg> UserOrgs { get; set; }
        public virtual DbSet<UserProject> UserProjects { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserSession> UserSessions { get; set; }
        public virtual DbSet<LoadAllUserRole> LoadAllUserRoles { get; set; }
        public virtual DbSet<ViewAllChangeRequest> ViewAllChangeRequests { get; set; }
        public virtual DbSet<ViewAllContract> ViewAllContracts { get; set; }
        public virtual DbSet<ViewAllPactSupplier> ViewAllPactSuppliers { get; set; }
        public virtual DbSet<ViewAllPOContract> ViewAllPOContracts { get; set; }
        public virtual DbSet<ViewAllPurchaseOrder> ViewAllPurchaseOrders { get; set; }
        public virtual DbSet<ViewAllPurchaseOrderTemplate> ViewAllPurchaseOrderTemplates { get; set; }
        public virtual DbSet<ViewAllRegistrationSupplier> ViewAllRegistrationSuppliers { get; set; }
        public virtual DbSet<ViewAllSupplierAudit> ViewAllSupplierAudits { get; set; }
        public virtual DbSet<ViewAllSupplier> ViewAllSuppliers { get; set; }
        public virtual DbSet<ViewLoadAllRole> ViewLoadAllRoles { get; set; }
        public virtual DbSet<VW_AllPOSignatureTemplates> VW_AllPOSignatureTemplates { get; set; }
        public virtual DbSet<VW_PO> VW_PO { get; set; }
        public virtual DbSet<VW_POLINE> VW_POLINE { get; set; }
        public virtual DbSet<VW_PORANK> VW_PORANK { get; set; }
        public virtual DbSet<VW_POSignatures> VW_POSignatures { get; set; }
        public virtual DbSet<vw_ProjectPOSignatures> vw_ProjectPOSignatures { get; set; }
    
        [DbFunction("FSPPOEntities", "PO_ViewPORevisionHistory")]
        public virtual IQueryable<PO_ViewPORevisionHistory_Result> PO_ViewPORevisionHistory(Nullable<int> iNPUTPONUM)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PO_ViewPORevisionHistory_Result>("[FSPPOEntities].[PO_ViewPORevisionHistory](@INPUTPONUM)", iNPUTPONUMParameter);
        }
    
        [DbFunction("FSPPOEntities", "PO_ViewPOStatusHistory")]
        public virtual IQueryable<PO_ViewPOStatusHistory_Result> PO_ViewPOStatusHistory(Nullable<int> iNPUTPONUM, Nullable<short> iNPUTPOREVISION)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(int));
    
            var iNPUTPOREVISIONParameter = iNPUTPOREVISION.HasValue ?
                new ObjectParameter("INPUTPOREVISION", iNPUTPOREVISION) :
                new ObjectParameter("INPUTPOREVISION", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PO_ViewPOStatusHistory_Result>("[FSPPOEntities].[PO_ViewPOStatusHistory](@INPUTPONUM, @INPUTPOREVISION)", iNPUTPONUMParameter, iNPUTPOREVISIONParameter);
        }
    
        public virtual ObjectResult<Contract_ViewStatusHistory_Result> Contract_ViewStatusHistory(Nullable<int> cONTRACTNUM)
        {
            var cONTRACTNUMParameter = cONTRACTNUM.HasValue ?
                new ObjectParameter("CONTRACTNUM", cONTRACTNUM) :
                new ObjectParameter("CONTRACTNUM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Contract_ViewStatusHistory_Result>("Contract_ViewStatusHistory", cONTRACTNUMParameter);
        }
    
        public virtual ObjectResult<FIRMS_GetAllDesignation_Result> FIRMS_GetAllDesignation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIRMS_GetAllDesignation_Result>("FIRMS_GetAllDesignation");
        }
    
        public virtual ObjectResult<FIRMS_GetAllEmployee_Result> FIRMS_GetAllEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIRMS_GetAllEmployee_Result>("FIRMS_GetAllEmployee");
        }
    
        public virtual ObjectResult<FIRMS_GetAllOrgs_Result> FIRMS_GetAllOrgs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIRMS_GetAllOrgs_Result>("FIRMS_GetAllOrgs");
        }
    
        public virtual int FIRMS_GetAllProjects(Nullable<int> iNPUTORGCODE)
        {
            var iNPUTORGCODEParameter = iNPUTORGCODE.HasValue ?
                new ObjectParameter("INPUTORGCODE", iNPUTORGCODE) :
                new ObjectParameter("INPUTORGCODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FIRMS_GetAllProjects", iNPUTORGCODEParameter);
        }
    
        public virtual ObjectResult<FIRMS_getOrgsName_Result> FIRMS_getOrgsName(string oRGCode)
        {
            var oRGCodeParameter = oRGCode != null ?
                new ObjectParameter("ORGCode", oRGCode) :
                new ObjectParameter("ORGCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIRMS_getOrgsName_Result>("FIRMS_getOrgsName", oRGCodeParameter);
        }
    
        public virtual ObjectResult<FIRMS_POLINERECEIVING_Result> FIRMS_POLINERECEIVING(Nullable<decimal> pONUM, Nullable<short> pOREVISION, Nullable<int> pOLINEID)
        {
            var pONUMParameter = pONUM.HasValue ?
                new ObjectParameter("PONUM", pONUM) :
                new ObjectParameter("PONUM", typeof(decimal));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(short));
    
            var pOLINEIDParameter = pOLINEID.HasValue ?
                new ObjectParameter("POLINEID", pOLINEID) :
                new ObjectParameter("POLINEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIRMS_POLINERECEIVING_Result>("FIRMS_POLINERECEIVING", pONUMParameter, pOREVISIONParameter, pOLINEIDParameter);
        }
    
        public virtual ObjectResult<FIRMS_ValidateEmployeeByID_Result> FIRMS_ValidateEmployeeByID(Nullable<int> emp_Code)
        {
            var emp_CodeParameter = emp_Code.HasValue ?
                new ObjectParameter("Emp_Code", emp_Code) :
                new ObjectParameter("Emp_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIRMS_ValidateEmployeeByID_Result>("FIRMS_ValidateEmployeeByID", emp_CodeParameter);
        }
    
        public virtual ObjectResult<FIRMS_VerifyOrgs_Result> FIRMS_VerifyOrgs(string oRGNAME)
        {
            var oRGNAMEParameter = oRGNAME != null ?
                new ObjectParameter("ORGNAME", oRGNAME) :
                new ObjectParameter("ORGNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIRMS_VerifyOrgs_Result>("FIRMS_VerifyOrgs", oRGNAMEParameter);
        }
    
        public virtual int FIRMS_VerifyProjects(Nullable<int> iNPUTORGCODE, string pROJECTNAME)
        {
            var iNPUTORGCODEParameter = iNPUTORGCODE.HasValue ?
                new ObjectParameter("INPUTORGCODE", iNPUTORGCODE) :
                new ObjectParameter("INPUTORGCODE", typeof(int));
    
            var pROJECTNAMEParameter = pROJECTNAME != null ?
                new ObjectParameter("PROJECTNAME", pROJECTNAME) :
                new ObjectParameter("PROJECTNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FIRMS_VerifyProjects", iNPUTORGCODEParameter, pROJECTNAMEParameter);
        }
    
        public virtual int FIRMS_VerifyProjectsUsingProjectCode(Nullable<int> iNPUTORGCODE, string pROJECTCode)
        {
            var iNPUTORGCODEParameter = iNPUTORGCODE.HasValue ?
                new ObjectParameter("INPUTORGCODE", iNPUTORGCODE) :
                new ObjectParameter("INPUTORGCODE", typeof(int));
    
            var pROJECTCodeParameter = pROJECTCode != null ?
                new ObjectParameter("PROJECTCode", pROJECTCode) :
                new ObjectParameter("PROJECTCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FIRMS_VerifyProjectsUsingProjectCode", iNPUTORGCODEParameter, pROJECTCodeParameter);
        }
    
        public virtual ObjectResult<GetPOSignature_Result> GetPOSignature(Nullable<decimal> pONUM, Nullable<short> pOREVISION)
        {
            var pONUMParameter = pONUM.HasValue ?
                new ObjectParameter("PONUM", pONUM) :
                new ObjectParameter("PONUM", typeof(decimal));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPOSignature_Result>("GetPOSignature", pONUMParameter, pOREVISIONParameter);
        }
    
        public virtual int NotifyInactivateSupExpTlic(string templateName)
        {
            var templateNameParameter = templateName != null ?
                new ObjectParameter("TemplateName", templateName) :
                new ObjectParameter("TemplateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NotifyInactivateSupExpTlic", templateNameParameter);
        }
    
        public virtual int PO_AddContractRef(Nullable<int> cONTRACTNUM, string rELATEDCONTRACTTYPE, Nullable<int> rELATEDCONTRACTNUM, string cREATEDBY, Nullable<System.DateTime> cREATIONDATE, Nullable<bool> aUTOCOMMIT)
        {
            var cONTRACTNUMParameter = cONTRACTNUM.HasValue ?
                new ObjectParameter("CONTRACTNUM", cONTRACTNUM) :
                new ObjectParameter("CONTRACTNUM", typeof(int));
    
            var rELATEDCONTRACTTYPEParameter = rELATEDCONTRACTTYPE != null ?
                new ObjectParameter("RELATEDCONTRACTTYPE", rELATEDCONTRACTTYPE) :
                new ObjectParameter("RELATEDCONTRACTTYPE", typeof(string));
    
            var rELATEDCONTRACTNUMParameter = rELATEDCONTRACTNUM.HasValue ?
                new ObjectParameter("RELATEDCONTRACTNUM", rELATEDCONTRACTNUM) :
                new ObjectParameter("RELATEDCONTRACTNUM", typeof(int));
    
            var cREATEDBYParameter = cREATEDBY != null ?
                new ObjectParameter("CREATEDBY", cREATEDBY) :
                new ObjectParameter("CREATEDBY", typeof(string));
    
            var cREATIONDATEParameter = cREATIONDATE.HasValue ?
                new ObjectParameter("CREATIONDATE", cREATIONDATE) :
                new ObjectParameter("CREATIONDATE", typeof(System.DateTime));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_AddContractRef", cONTRACTNUMParameter, rELATEDCONTRACTTYPEParameter, rELATEDCONTRACTNUMParameter, cREATEDBYParameter, cREATIONDATEParameter, aUTOCOMMITParameter);
        }
    
        public virtual int PO_AddEditDeletePOPermission(Nullable<int> pOPERMISSIONID, Nullable<decimal> pONUM, string pERMCODE, Nullable<int> aUTHBYCODE, string aUTHBYNAME, string aUTHBYPOS, string jUSTIFICATION, string cREATEDBY, Nullable<System.DateTime> cREATIONDATE, string sTATUS, Nullable<bool> aUTOCOMMIT)
        {
            var pOPERMISSIONIDParameter = pOPERMISSIONID.HasValue ?
                new ObjectParameter("POPERMISSIONID", pOPERMISSIONID) :
                new ObjectParameter("POPERMISSIONID", typeof(int));
    
            var pONUMParameter = pONUM.HasValue ?
                new ObjectParameter("PONUM", pONUM) :
                new ObjectParameter("PONUM", typeof(decimal));
    
            var pERMCODEParameter = pERMCODE != null ?
                new ObjectParameter("PERMCODE", pERMCODE) :
                new ObjectParameter("PERMCODE", typeof(string));
    
            var aUTHBYCODEParameter = aUTHBYCODE.HasValue ?
                new ObjectParameter("AUTHBYCODE", aUTHBYCODE) :
                new ObjectParameter("AUTHBYCODE", typeof(int));
    
            var aUTHBYNAMEParameter = aUTHBYNAME != null ?
                new ObjectParameter("AUTHBYNAME", aUTHBYNAME) :
                new ObjectParameter("AUTHBYNAME", typeof(string));
    
            var aUTHBYPOSParameter = aUTHBYPOS != null ?
                new ObjectParameter("AUTHBYPOS", aUTHBYPOS) :
                new ObjectParameter("AUTHBYPOS", typeof(string));
    
            var jUSTIFICATIONParameter = jUSTIFICATION != null ?
                new ObjectParameter("JUSTIFICATION", jUSTIFICATION) :
                new ObjectParameter("JUSTIFICATION", typeof(string));
    
            var cREATEDBYParameter = cREATEDBY != null ?
                new ObjectParameter("CREATEDBY", cREATEDBY) :
                new ObjectParameter("CREATEDBY", typeof(string));
    
            var cREATIONDATEParameter = cREATIONDATE.HasValue ?
                new ObjectParameter("CREATIONDATE", cREATIONDATE) :
                new ObjectParameter("CREATIONDATE", typeof(System.DateTime));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_AddEditDeletePOPermission", pOPERMISSIONIDParameter, pONUMParameter, pERMCODEParameter, aUTHBYCODEParameter, aUTHBYNAMEParameter, aUTHBYPOSParameter, jUSTIFICATIONParameter, cREATEDBYParameter, cREATIONDATEParameter, sTATUSParameter, aUTOCOMMITParameter);
        }
    
        public virtual int PO_ADDPO(Nullable<decimal> pONUM, string pOREF, Nullable<long> pOSID, Nullable<short> pOREVISION, string dESCRIPTION, string oRGCODE, string oRGNAME, string pROJECTCODE, string pROJECTNAME, string mRNUM, string qNUM, Nullable<System.DateTime> qDATE, string pAYMENTTERMS, Nullable<System.DateTime> oRDERDATE, Nullable<System.DateTime> rEQUIREDATE, Nullable<System.DateTime> vENDORDATE, string pOTYPE, string oRIGINALPONUM, string bUYERCODE, string bUYERNAME, Nullable<int> vENDORID, string vENDORNAME, string vENDORADDR, string vENDORATTN1NAME, string vENDORATTN1POS, string vENDORATTN1MOB, string vENDORATTN1TEL, string vENDORATTN1FAX, string vENDORATTN1EMAIL, string vENDORATTN2NAME, string vENDORATTN2POS, string vENDORATTN2MOB, string vENDORATTN2TEL, string vENDORATTN2FAX, string vENDORATTN2EMAIL, string sHIPTOADDR, string sHIPTOATTN1NAME, string sHIPTOATTN1MOB, string sHIPTOATTN1POS, string sHIPTOATTN2NAME, string sHIPTOATTN2MOB, string sHIPTOATTN2POS, Nullable<decimal> tOTALCOST, string cREATEDBY, Nullable<System.DateTime> cREATIONDATE, Nullable<int> cONTRACTREFNUM, string rEVCOMMENTS, string cURRENCYCODE, Nullable<decimal> tOTALTAX, Nullable<decimal> pRETAXTOTAL, string iNTNOTE, string eXTNOTE, Nullable<bool> sENDNOTETOACCTS, Nullable<bool> aUTOCOMMIT)
        {
            var pONUMParameter = pONUM.HasValue ?
                new ObjectParameter("PONUM", pONUM) :
                new ObjectParameter("PONUM", typeof(decimal));
    
            var pOREFParameter = pOREF != null ?
                new ObjectParameter("POREF", pOREF) :
                new ObjectParameter("POREF", typeof(string));
    
            var pOSIDParameter = pOSID.HasValue ?
                new ObjectParameter("POSID", pOSID) :
                new ObjectParameter("POSID", typeof(long));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(short));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var oRGNAMEParameter = oRGNAME != null ?
                new ObjectParameter("ORGNAME", oRGNAME) :
                new ObjectParameter("ORGNAME", typeof(string));
    
            var pROJECTCODEParameter = pROJECTCODE != null ?
                new ObjectParameter("PROJECTCODE", pROJECTCODE) :
                new ObjectParameter("PROJECTCODE", typeof(string));
    
            var pROJECTNAMEParameter = pROJECTNAME != null ?
                new ObjectParameter("PROJECTNAME", pROJECTNAME) :
                new ObjectParameter("PROJECTNAME", typeof(string));
    
            var mRNUMParameter = mRNUM != null ?
                new ObjectParameter("MRNUM", mRNUM) :
                new ObjectParameter("MRNUM", typeof(string));
    
            var qNUMParameter = qNUM != null ?
                new ObjectParameter("QNUM", qNUM) :
                new ObjectParameter("QNUM", typeof(string));
    
            var qDATEParameter = qDATE.HasValue ?
                new ObjectParameter("QDATE", qDATE) :
                new ObjectParameter("QDATE", typeof(System.DateTime));
    
            var pAYMENTTERMSParameter = pAYMENTTERMS != null ?
                new ObjectParameter("PAYMENTTERMS", pAYMENTTERMS) :
                new ObjectParameter("PAYMENTTERMS", typeof(string));
    
            var oRDERDATEParameter = oRDERDATE.HasValue ?
                new ObjectParameter("ORDERDATE", oRDERDATE) :
                new ObjectParameter("ORDERDATE", typeof(System.DateTime));
    
            var rEQUIREDATEParameter = rEQUIREDATE.HasValue ?
                new ObjectParameter("REQUIREDATE", rEQUIREDATE) :
                new ObjectParameter("REQUIREDATE", typeof(System.DateTime));
    
            var vENDORDATEParameter = vENDORDATE.HasValue ?
                new ObjectParameter("VENDORDATE", vENDORDATE) :
                new ObjectParameter("VENDORDATE", typeof(System.DateTime));
    
            var pOTYPEParameter = pOTYPE != null ?
                new ObjectParameter("POTYPE", pOTYPE) :
                new ObjectParameter("POTYPE", typeof(string));
    
            var oRIGINALPONUMParameter = oRIGINALPONUM != null ?
                new ObjectParameter("ORIGINALPONUM", oRIGINALPONUM) :
                new ObjectParameter("ORIGINALPONUM", typeof(string));
    
            var bUYERCODEParameter = bUYERCODE != null ?
                new ObjectParameter("BUYERCODE", bUYERCODE) :
                new ObjectParameter("BUYERCODE", typeof(string));
    
            var bUYERNAMEParameter = bUYERNAME != null ?
                new ObjectParameter("BUYERNAME", bUYERNAME) :
                new ObjectParameter("BUYERNAME", typeof(string));
    
            var vENDORIDParameter = vENDORID.HasValue ?
                new ObjectParameter("VENDORID", vENDORID) :
                new ObjectParameter("VENDORID", typeof(int));
    
            var vENDORNAMEParameter = vENDORNAME != null ?
                new ObjectParameter("VENDORNAME", vENDORNAME) :
                new ObjectParameter("VENDORNAME", typeof(string));
    
            var vENDORADDRParameter = vENDORADDR != null ?
                new ObjectParameter("VENDORADDR", vENDORADDR) :
                new ObjectParameter("VENDORADDR", typeof(string));
    
            var vENDORATTN1NAMEParameter = vENDORATTN1NAME != null ?
                new ObjectParameter("VENDORATTN1NAME", vENDORATTN1NAME) :
                new ObjectParameter("VENDORATTN1NAME", typeof(string));
    
            var vENDORATTN1POSParameter = vENDORATTN1POS != null ?
                new ObjectParameter("VENDORATTN1POS", vENDORATTN1POS) :
                new ObjectParameter("VENDORATTN1POS", typeof(string));
    
            var vENDORATTN1MOBParameter = vENDORATTN1MOB != null ?
                new ObjectParameter("VENDORATTN1MOB", vENDORATTN1MOB) :
                new ObjectParameter("VENDORATTN1MOB", typeof(string));
    
            var vENDORATTN1TELParameter = vENDORATTN1TEL != null ?
                new ObjectParameter("VENDORATTN1TEL", vENDORATTN1TEL) :
                new ObjectParameter("VENDORATTN1TEL", typeof(string));
    
            var vENDORATTN1FAXParameter = vENDORATTN1FAX != null ?
                new ObjectParameter("VENDORATTN1FAX", vENDORATTN1FAX) :
                new ObjectParameter("VENDORATTN1FAX", typeof(string));
    
            var vENDORATTN1EMAILParameter = vENDORATTN1EMAIL != null ?
                new ObjectParameter("VENDORATTN1EMAIL", vENDORATTN1EMAIL) :
                new ObjectParameter("VENDORATTN1EMAIL", typeof(string));
    
            var vENDORATTN2NAMEParameter = vENDORATTN2NAME != null ?
                new ObjectParameter("VENDORATTN2NAME", vENDORATTN2NAME) :
                new ObjectParameter("VENDORATTN2NAME", typeof(string));
    
            var vENDORATTN2POSParameter = vENDORATTN2POS != null ?
                new ObjectParameter("VENDORATTN2POS", vENDORATTN2POS) :
                new ObjectParameter("VENDORATTN2POS", typeof(string));
    
            var vENDORATTN2MOBParameter = vENDORATTN2MOB != null ?
                new ObjectParameter("VENDORATTN2MOB", vENDORATTN2MOB) :
                new ObjectParameter("VENDORATTN2MOB", typeof(string));
    
            var vENDORATTN2TELParameter = vENDORATTN2TEL != null ?
                new ObjectParameter("VENDORATTN2TEL", vENDORATTN2TEL) :
                new ObjectParameter("VENDORATTN2TEL", typeof(string));
    
            var vENDORATTN2FAXParameter = vENDORATTN2FAX != null ?
                new ObjectParameter("VENDORATTN2FAX", vENDORATTN2FAX) :
                new ObjectParameter("VENDORATTN2FAX", typeof(string));
    
            var vENDORATTN2EMAILParameter = vENDORATTN2EMAIL != null ?
                new ObjectParameter("VENDORATTN2EMAIL", vENDORATTN2EMAIL) :
                new ObjectParameter("VENDORATTN2EMAIL", typeof(string));
    
            var sHIPTOADDRParameter = sHIPTOADDR != null ?
                new ObjectParameter("SHIPTOADDR", sHIPTOADDR) :
                new ObjectParameter("SHIPTOADDR", typeof(string));
    
            var sHIPTOATTN1NAMEParameter = sHIPTOATTN1NAME != null ?
                new ObjectParameter("SHIPTOATTN1NAME", sHIPTOATTN1NAME) :
                new ObjectParameter("SHIPTOATTN1NAME", typeof(string));
    
            var sHIPTOATTN1MOBParameter = sHIPTOATTN1MOB != null ?
                new ObjectParameter("SHIPTOATTN1MOB", sHIPTOATTN1MOB) :
                new ObjectParameter("SHIPTOATTN1MOB", typeof(string));
    
            var sHIPTOATTN1POSParameter = sHIPTOATTN1POS != null ?
                new ObjectParameter("SHIPTOATTN1POS", sHIPTOATTN1POS) :
                new ObjectParameter("SHIPTOATTN1POS", typeof(string));
    
            var sHIPTOATTN2NAMEParameter = sHIPTOATTN2NAME != null ?
                new ObjectParameter("SHIPTOATTN2NAME", sHIPTOATTN2NAME) :
                new ObjectParameter("SHIPTOATTN2NAME", typeof(string));
    
            var sHIPTOATTN2MOBParameter = sHIPTOATTN2MOB != null ?
                new ObjectParameter("SHIPTOATTN2MOB", sHIPTOATTN2MOB) :
                new ObjectParameter("SHIPTOATTN2MOB", typeof(string));
    
            var sHIPTOATTN2POSParameter = sHIPTOATTN2POS != null ?
                new ObjectParameter("SHIPTOATTN2POS", sHIPTOATTN2POS) :
                new ObjectParameter("SHIPTOATTN2POS", typeof(string));
    
            var tOTALCOSTParameter = tOTALCOST.HasValue ?
                new ObjectParameter("TOTALCOST", tOTALCOST) :
                new ObjectParameter("TOTALCOST", typeof(decimal));
    
            var cREATEDBYParameter = cREATEDBY != null ?
                new ObjectParameter("CREATEDBY", cREATEDBY) :
                new ObjectParameter("CREATEDBY", typeof(string));
    
            var cREATIONDATEParameter = cREATIONDATE.HasValue ?
                new ObjectParameter("CREATIONDATE", cREATIONDATE) :
                new ObjectParameter("CREATIONDATE", typeof(System.DateTime));
    
            var cONTRACTREFNUMParameter = cONTRACTREFNUM.HasValue ?
                new ObjectParameter("CONTRACTREFNUM", cONTRACTREFNUM) :
                new ObjectParameter("CONTRACTREFNUM", typeof(int));
    
            var rEVCOMMENTSParameter = rEVCOMMENTS != null ?
                new ObjectParameter("REVCOMMENTS", rEVCOMMENTS) :
                new ObjectParameter("REVCOMMENTS", typeof(string));
    
            var cURRENCYCODEParameter = cURRENCYCODE != null ?
                new ObjectParameter("CURRENCYCODE", cURRENCYCODE) :
                new ObjectParameter("CURRENCYCODE", typeof(string));
    
            var tOTALTAXParameter = tOTALTAX.HasValue ?
                new ObjectParameter("TOTALTAX", tOTALTAX) :
                new ObjectParameter("TOTALTAX", typeof(decimal));
    
            var pRETAXTOTALParameter = pRETAXTOTAL.HasValue ?
                new ObjectParameter("PRETAXTOTAL", pRETAXTOTAL) :
                new ObjectParameter("PRETAXTOTAL", typeof(decimal));
    
            var iNTNOTEParameter = iNTNOTE != null ?
                new ObjectParameter("INTNOTE", iNTNOTE) :
                new ObjectParameter("INTNOTE", typeof(string));
    
            var eXTNOTEParameter = eXTNOTE != null ?
                new ObjectParameter("EXTNOTE", eXTNOTE) :
                new ObjectParameter("EXTNOTE", typeof(string));
    
            var sENDNOTETOACCTSParameter = sENDNOTETOACCTS.HasValue ?
                new ObjectParameter("SENDNOTETOACCTS", sENDNOTETOACCTS) :
                new ObjectParameter("SENDNOTETOACCTS", typeof(bool));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_ADDPO", pONUMParameter, pOREFParameter, pOSIDParameter, pOREVISIONParameter, dESCRIPTIONParameter, oRGCODEParameter, oRGNAMEParameter, pROJECTCODEParameter, pROJECTNAMEParameter, mRNUMParameter, qNUMParameter, qDATEParameter, pAYMENTTERMSParameter, oRDERDATEParameter, rEQUIREDATEParameter, vENDORDATEParameter, pOTYPEParameter, oRIGINALPONUMParameter, bUYERCODEParameter, bUYERNAMEParameter, vENDORIDParameter, vENDORNAMEParameter, vENDORADDRParameter, vENDORATTN1NAMEParameter, vENDORATTN1POSParameter, vENDORATTN1MOBParameter, vENDORATTN1TELParameter, vENDORATTN1FAXParameter, vENDORATTN1EMAILParameter, vENDORATTN2NAMEParameter, vENDORATTN2POSParameter, vENDORATTN2MOBParameter, vENDORATTN2TELParameter, vENDORATTN2FAXParameter, vENDORATTN2EMAILParameter, sHIPTOADDRParameter, sHIPTOATTN1NAMEParameter, sHIPTOATTN1MOBParameter, sHIPTOATTN1POSParameter, sHIPTOATTN2NAMEParameter, sHIPTOATTN2MOBParameter, sHIPTOATTN2POSParameter, tOTALCOSTParameter, cREATEDBYParameter, cREATIONDATEParameter, cONTRACTREFNUMParameter, rEVCOMMENTSParameter, cURRENCYCODEParameter, tOTALTAXParameter, pRETAXTOTALParameter, iNTNOTEParameter, eXTNOTEParameter, sENDNOTETOACCTSParameter, aUTOCOMMITParameter);
        }
    
        public virtual int PO_AddPOLine(Nullable<decimal> pONUM, Nullable<short> pOREVISION, Nullable<short> pOLINENUM, string lINETYPE, string cATALOGCODE, string cOSTCODE, string dESCRIPTION, Nullable<decimal> oRDERQTY, string oRDERUNIT, Nullable<decimal> uNITCOST, Nullable<decimal> lINECOST, string iTEMNUM, string mODELNUM, string rEQUESTEDBYCODE, string rEQUESTEDBYNAME, string mANUFACUTRER, string rEMARK, string tAXCODE, Nullable<decimal> tAXRATE, Nullable<decimal> tAXTOTAL, Nullable<bool> tAXED, string rOWSTAMP, string cREATEDBY, Nullable<System.DateTime> cREATIONDATE, Nullable<bool> aUTOCOMMIT, string sTATUSCODE, Nullable<decimal> rECEIPTTOLERANCE, string sPECIFICATION)
        {
            var pONUMParameter = pONUM.HasValue ?
                new ObjectParameter("PONUM", pONUM) :
                new ObjectParameter("PONUM", typeof(decimal));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(short));
    
            var pOLINENUMParameter = pOLINENUM.HasValue ?
                new ObjectParameter("POLINENUM", pOLINENUM) :
                new ObjectParameter("POLINENUM", typeof(short));
    
            var lINETYPEParameter = lINETYPE != null ?
                new ObjectParameter("LINETYPE", lINETYPE) :
                new ObjectParameter("LINETYPE", typeof(string));
    
            var cATALOGCODEParameter = cATALOGCODE != null ?
                new ObjectParameter("CATALOGCODE", cATALOGCODE) :
                new ObjectParameter("CATALOGCODE", typeof(string));
    
            var cOSTCODEParameter = cOSTCODE != null ?
                new ObjectParameter("COSTCODE", cOSTCODE) :
                new ObjectParameter("COSTCODE", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var oRDERQTYParameter = oRDERQTY.HasValue ?
                new ObjectParameter("ORDERQTY", oRDERQTY) :
                new ObjectParameter("ORDERQTY", typeof(decimal));
    
            var oRDERUNITParameter = oRDERUNIT != null ?
                new ObjectParameter("ORDERUNIT", oRDERUNIT) :
                new ObjectParameter("ORDERUNIT", typeof(string));
    
            var uNITCOSTParameter = uNITCOST.HasValue ?
                new ObjectParameter("UNITCOST", uNITCOST) :
                new ObjectParameter("UNITCOST", typeof(decimal));
    
            var lINECOSTParameter = lINECOST.HasValue ?
                new ObjectParameter("LINECOST", lINECOST) :
                new ObjectParameter("LINECOST", typeof(decimal));
    
            var iTEMNUMParameter = iTEMNUM != null ?
                new ObjectParameter("ITEMNUM", iTEMNUM) :
                new ObjectParameter("ITEMNUM", typeof(string));
    
            var mODELNUMParameter = mODELNUM != null ?
                new ObjectParameter("MODELNUM", mODELNUM) :
                new ObjectParameter("MODELNUM", typeof(string));
    
            var rEQUESTEDBYCODEParameter = rEQUESTEDBYCODE != null ?
                new ObjectParameter("REQUESTEDBYCODE", rEQUESTEDBYCODE) :
                new ObjectParameter("REQUESTEDBYCODE", typeof(string));
    
            var rEQUESTEDBYNAMEParameter = rEQUESTEDBYNAME != null ?
                new ObjectParameter("REQUESTEDBYNAME", rEQUESTEDBYNAME) :
                new ObjectParameter("REQUESTEDBYNAME", typeof(string));
    
            var mANUFACUTRERParameter = mANUFACUTRER != null ?
                new ObjectParameter("MANUFACUTRER", mANUFACUTRER) :
                new ObjectParameter("MANUFACUTRER", typeof(string));
    
            var rEMARKParameter = rEMARK != null ?
                new ObjectParameter("REMARK", rEMARK) :
                new ObjectParameter("REMARK", typeof(string));
    
            var tAXCODEParameter = tAXCODE != null ?
                new ObjectParameter("TAXCODE", tAXCODE) :
                new ObjectParameter("TAXCODE", typeof(string));
    
            var tAXRATEParameter = tAXRATE.HasValue ?
                new ObjectParameter("TAXRATE", tAXRATE) :
                new ObjectParameter("TAXRATE", typeof(decimal));
    
            var tAXTOTALParameter = tAXTOTAL.HasValue ?
                new ObjectParameter("TAXTOTAL", tAXTOTAL) :
                new ObjectParameter("TAXTOTAL", typeof(decimal));
    
            var tAXEDParameter = tAXED.HasValue ?
                new ObjectParameter("TAXED", tAXED) :
                new ObjectParameter("TAXED", typeof(bool));
    
            var rOWSTAMPParameter = rOWSTAMP != null ?
                new ObjectParameter("ROWSTAMP", rOWSTAMP) :
                new ObjectParameter("ROWSTAMP", typeof(string));
    
            var cREATEDBYParameter = cREATEDBY != null ?
                new ObjectParameter("CREATEDBY", cREATEDBY) :
                new ObjectParameter("CREATEDBY", typeof(string));
    
            var cREATIONDATEParameter = cREATIONDATE.HasValue ?
                new ObjectParameter("CREATIONDATE", cREATIONDATE) :
                new ObjectParameter("CREATIONDATE", typeof(System.DateTime));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            var sTATUSCODEParameter = sTATUSCODE != null ?
                new ObjectParameter("STATUSCODE", sTATUSCODE) :
                new ObjectParameter("STATUSCODE", typeof(string));
    
            var rECEIPTTOLERANCEParameter = rECEIPTTOLERANCE.HasValue ?
                new ObjectParameter("RECEIPTTOLERANCE", rECEIPTTOLERANCE) :
                new ObjectParameter("RECEIPTTOLERANCE", typeof(decimal));
    
            var sPECIFICATIONParameter = sPECIFICATION != null ?
                new ObjectParameter("SPECIFICATION", sPECIFICATION) :
                new ObjectParameter("SPECIFICATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_AddPOLine", pONUMParameter, pOREVISIONParameter, pOLINENUMParameter, lINETYPEParameter, cATALOGCODEParameter, cOSTCODEParameter, dESCRIPTIONParameter, oRDERQTYParameter, oRDERUNITParameter, uNITCOSTParameter, lINECOSTParameter, iTEMNUMParameter, mODELNUMParameter, rEQUESTEDBYCODEParameter, rEQUESTEDBYNAMEParameter, mANUFACUTRERParameter, rEMARKParameter, tAXCODEParameter, tAXRATEParameter, tAXTOTALParameter, tAXEDParameter, rOWSTAMPParameter, cREATEDBYParameter, cREATIONDATEParameter, aUTOCOMMITParameter, sTATUSCODEParameter, rECEIPTTOLERANCEParameter, sPECIFICATIONParameter);
        }
    
        public virtual int PO_ADDPOSignature(string orgCode, Nullable<int> orderNo, Nullable<decimal> pONum, Nullable<short> pOREVISION, string authority, Nullable<int> designation, string teamMemberCode, string teamMemberName, string cREATEDBY, Nullable<bool> aUTOCOMMIT)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("OrgCode", orgCode) :
                new ObjectParameter("OrgCode", typeof(string));
    
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(int));
    
            var pONumParameter = pONum.HasValue ?
                new ObjectParameter("PONum", pONum) :
                new ObjectParameter("PONum", typeof(decimal));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(short));
    
            var authorityParameter = authority != null ?
                new ObjectParameter("Authority", authority) :
                new ObjectParameter("Authority", typeof(string));
    
            var designationParameter = designation.HasValue ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(int));
    
            var teamMemberCodeParameter = teamMemberCode != null ?
                new ObjectParameter("TeamMemberCode", teamMemberCode) :
                new ObjectParameter("TeamMemberCode", typeof(string));
    
            var teamMemberNameParameter = teamMemberName != null ?
                new ObjectParameter("TeamMemberName", teamMemberName) :
                new ObjectParameter("TeamMemberName", typeof(string));
    
            var cREATEDBYParameter = cREATEDBY != null ?
                new ObjectParameter("CREATEDBY", cREATEDBY) :
                new ObjectParameter("CREATEDBY", typeof(string));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_ADDPOSignature", orgCodeParameter, orderNoParameter, pONumParameter, pOREVISIONParameter, authorityParameter, designationParameter, teamMemberCodeParameter, teamMemberNameParameter, cREATEDBYParameter, aUTOCOMMITParameter);
        }
    
        public virtual int PO_CalculatePOTotalAmount(Nullable<decimal> pONUM, Nullable<short> pOREVISION, string lASTMODIFIEDBY, Nullable<System.DateTime> lASTMODIFIEDDATE)
        {
            var pONUMParameter = pONUM.HasValue ?
                new ObjectParameter("PONUM", pONUM) :
                new ObjectParameter("PONUM", typeof(decimal));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(short));
    
            var lASTMODIFIEDBYParameter = lASTMODIFIEDBY != null ?
                new ObjectParameter("LASTMODIFIEDBY", lASTMODIFIEDBY) :
                new ObjectParameter("LASTMODIFIEDBY", typeof(string));
    
            var lASTMODIFIEDDATEParameter = lASTMODIFIEDDATE.HasValue ?
                new ObjectParameter("LASTMODIFIEDDATE", lASTMODIFIEDDATE) :
                new ObjectParameter("LASTMODIFIEDDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_CalculatePOTotalAmount", pONUMParameter, pOREVISIONParameter, lASTMODIFIEDBYParameter, lASTMODIFIEDDATEParameter);
        }
    
        public virtual int PO_ChangePOStatus(Nullable<decimal> iNPUTPONUM, Nullable<short> iNPUTPOREV, string iNPUTPOSTATUS, string pREVSTATUS, string iNPUTMEMO, string iNPUTCHANGEDBY, Nullable<bool> aUTOCOMMIT)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(decimal));
    
            var iNPUTPOREVParameter = iNPUTPOREV.HasValue ?
                new ObjectParameter("INPUTPOREV", iNPUTPOREV) :
                new ObjectParameter("INPUTPOREV", typeof(short));
    
            var iNPUTPOSTATUSParameter = iNPUTPOSTATUS != null ?
                new ObjectParameter("INPUTPOSTATUS", iNPUTPOSTATUS) :
                new ObjectParameter("INPUTPOSTATUS", typeof(string));
    
            var pREVSTATUSParameter = pREVSTATUS != null ?
                new ObjectParameter("PREVSTATUS", pREVSTATUS) :
                new ObjectParameter("PREVSTATUS", typeof(string));
    
            var iNPUTMEMOParameter = iNPUTMEMO != null ?
                new ObjectParameter("INPUTMEMO", iNPUTMEMO) :
                new ObjectParameter("INPUTMEMO", typeof(string));
    
            var iNPUTCHANGEDBYParameter = iNPUTCHANGEDBY != null ?
                new ObjectParameter("INPUTCHANGEDBY", iNPUTCHANGEDBY) :
                new ObjectParameter("INPUTCHANGEDBY", typeof(string));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_ChangePOStatus", iNPUTPONUMParameter, iNPUTPOREVParameter, iNPUTPOSTATUSParameter, pREVSTATUSParameter, iNPUTMEMOParameter, iNPUTCHANGEDBYParameter, aUTOCOMMITParameter);
        }
    
        public virtual int PO_CreatePORev(Nullable<decimal> iNPUTPONUM, Nullable<short> iNPUTPOREV, string iNPUTPOREVCOMMENTS, string iNPUTCHANGEDBY, ObjectParameter oUTPUTNEXTREV)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(decimal));
    
            var iNPUTPOREVParameter = iNPUTPOREV.HasValue ?
                new ObjectParameter("INPUTPOREV", iNPUTPOREV) :
                new ObjectParameter("INPUTPOREV", typeof(short));
    
            var iNPUTPOREVCOMMENTSParameter = iNPUTPOREVCOMMENTS != null ?
                new ObjectParameter("INPUTPOREVCOMMENTS", iNPUTPOREVCOMMENTS) :
                new ObjectParameter("INPUTPOREVCOMMENTS", typeof(string));
    
            var iNPUTCHANGEDBYParameter = iNPUTCHANGEDBY != null ?
                new ObjectParameter("INPUTCHANGEDBY", iNPUTCHANGEDBY) :
                new ObjectParameter("INPUTCHANGEDBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_CreatePORev", iNPUTPONUMParameter, iNPUTPOREVParameter, iNPUTPOREVCOMMENTSParameter, iNPUTCHANGEDBYParameter, oUTPUTNEXTREV);
        }
    
        public virtual int PO_DeleteContractRef(Nullable<int> cONTRACTNUM, string rELATEDCONTRACTTYPE, Nullable<int> rELATEDCONTRACTNUM, string mODIFIEDBY, Nullable<System.DateTime> mODIFICATIONDATE, Nullable<bool> aUTOCOMMIT)
        {
            var cONTRACTNUMParameter = cONTRACTNUM.HasValue ?
                new ObjectParameter("CONTRACTNUM", cONTRACTNUM) :
                new ObjectParameter("CONTRACTNUM", typeof(int));
    
            var rELATEDCONTRACTTYPEParameter = rELATEDCONTRACTTYPE != null ?
                new ObjectParameter("RELATEDCONTRACTTYPE", rELATEDCONTRACTTYPE) :
                new ObjectParameter("RELATEDCONTRACTTYPE", typeof(string));
    
            var rELATEDCONTRACTNUMParameter = rELATEDCONTRACTNUM.HasValue ?
                new ObjectParameter("RELATEDCONTRACTNUM", rELATEDCONTRACTNUM) :
                new ObjectParameter("RELATEDCONTRACTNUM", typeof(int));
    
            var mODIFIEDBYParameter = mODIFIEDBY != null ?
                new ObjectParameter("MODIFIEDBY", mODIFIEDBY) :
                new ObjectParameter("MODIFIEDBY", typeof(string));
    
            var mODIFICATIONDATEParameter = mODIFICATIONDATE.HasValue ?
                new ObjectParameter("MODIFICATIONDATE", mODIFICATIONDATE) :
                new ObjectParameter("MODIFICATIONDATE", typeof(System.DateTime));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_DeleteContractRef", cONTRACTNUMParameter, rELATEDCONTRACTTYPEParameter, rELATEDCONTRACTNUMParameter, mODIFIEDBYParameter, mODIFICATIONDATEParameter, aUTOCOMMITParameter);
        }
    
        public virtual int PO_DeletePOLine(Nullable<decimal> pONUM, Nullable<short> pOREVISION, Nullable<short> pOLINENUM, string lASTMODIFIEDBY, Nullable<System.DateTime> lASTMODIFIEDDATE, Nullable<bool> aUTOCOMMIT)
        {
            var pONUMParameter = pONUM.HasValue ?
                new ObjectParameter("PONUM", pONUM) :
                new ObjectParameter("PONUM", typeof(decimal));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(short));
    
            var pOLINENUMParameter = pOLINENUM.HasValue ?
                new ObjectParameter("POLINENUM", pOLINENUM) :
                new ObjectParameter("POLINENUM", typeof(short));
    
            var lASTMODIFIEDBYParameter = lASTMODIFIEDBY != null ?
                new ObjectParameter("LASTMODIFIEDBY", lASTMODIFIEDBY) :
                new ObjectParameter("LASTMODIFIEDBY", typeof(string));
    
            var lASTMODIFIEDDATEParameter = lASTMODIFIEDDATE.HasValue ?
                new ObjectParameter("LASTMODIFIEDDATE", lASTMODIFIEDDATE) :
                new ObjectParameter("LASTMODIFIEDDATE", typeof(System.DateTime));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_DeletePOLine", pONUMParameter, pOREVISIONParameter, pOLINENUMParameter, lASTMODIFIEDBYParameter, lASTMODIFIEDDATEParameter, aUTOCOMMITParameter);
        }
    
        public virtual int PO_DeletePOSignature(string orgCode, Nullable<int> pOSignID, Nullable<int> orderNo, Nullable<decimal> pONum, Nullable<short> pOREVISION, string auditBy, Nullable<bool> aUTOCOMMIT)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("OrgCode", orgCode) :
                new ObjectParameter("OrgCode", typeof(string));
    
            var pOSignIDParameter = pOSignID.HasValue ?
                new ObjectParameter("POSignID", pOSignID) :
                new ObjectParameter("POSignID", typeof(int));
    
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(int));
    
            var pONumParameter = pONum.HasValue ?
                new ObjectParameter("PONum", pONum) :
                new ObjectParameter("PONum", typeof(decimal));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(short));
    
            var auditByParameter = auditBy != null ?
                new ObjectParameter("AuditBy", auditBy) :
                new ObjectParameter("AuditBy", typeof(string));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_DeletePOSignature", orgCodeParameter, pOSignIDParameter, orderNoParameter, pONumParameter, pOREVISIONParameter, auditByParameter, aUTOCOMMITParameter);
        }
    
        public virtual int PO_EditPO(Nullable<decimal> pONUM, string pOREF, Nullable<long> pOSID, Nullable<short> pOREVISION, string dESCRIPTION, string oRGCODE, string oRGNAME, string pROJECTCODE, string pROJECTNAME, string mRNUM, string qNUM, Nullable<System.DateTime> qDATE, string pAYMENTTERMS, Nullable<System.DateTime> oRDERDATE, Nullable<System.DateTime> rEQUIREDATE, Nullable<System.DateTime> vENDORDATE, string pOTYPE, string oRIGINALPONUM, string bUYERCODE, string bUYERNAME, Nullable<int> vENDORID, string vENDORNAME, string vENDORADDR, string vENDORATTN1NAME, string vENDORATTN1POS, string vENDORATTN1MOB, string vENDORATTN1TEL, string vENDORATTN1FAX, string vENDORATTN1EMAIL, string vENDORATTN2NAME, string vENDORATTN2POS, string vENDORATTN2MOB, string vENDORATTN2TEL, string vENDORATTN2FAX, string vENDORATTN2EMAIL, string sHIPTOADDR, string sHIPTOATTN1NAME, string sHIPTOATTN1MOB, string sHIPTOATTN1POS, string sHIPTOATTN2NAME, string sHIPTOATTN2MOB, string sHIPTOATTN2POS, Nullable<decimal> tOTALCOST, string lASTMODIFIEDBY, Nullable<int> cONTRACTREFNUM, string sTATUS, Nullable<System.DateTime> sTATUSDATE, string cURRENCYCODE, Nullable<decimal> tOTALTAX, Nullable<decimal> pRETAXTOTAL, string iNTNOTE, string eXTNOTE, Nullable<bool> sENDNOTETOACCTS, Nullable<bool> aUTOCOMMIT)
        {
            var pONUMParameter = pONUM.HasValue ?
                new ObjectParameter("PONUM", pONUM) :
                new ObjectParameter("PONUM", typeof(decimal));
    
            var pOREFParameter = pOREF != null ?
                new ObjectParameter("POREF", pOREF) :
                new ObjectParameter("POREF", typeof(string));
    
            var pOSIDParameter = pOSID.HasValue ?
                new ObjectParameter("POSID", pOSID) :
                new ObjectParameter("POSID", typeof(long));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(short));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var oRGNAMEParameter = oRGNAME != null ?
                new ObjectParameter("ORGNAME", oRGNAME) :
                new ObjectParameter("ORGNAME", typeof(string));
    
            var pROJECTCODEParameter = pROJECTCODE != null ?
                new ObjectParameter("PROJECTCODE", pROJECTCODE) :
                new ObjectParameter("PROJECTCODE", typeof(string));
    
            var pROJECTNAMEParameter = pROJECTNAME != null ?
                new ObjectParameter("PROJECTNAME", pROJECTNAME) :
                new ObjectParameter("PROJECTNAME", typeof(string));
    
            var mRNUMParameter = mRNUM != null ?
                new ObjectParameter("MRNUM", mRNUM) :
                new ObjectParameter("MRNUM", typeof(string));
    
            var qNUMParameter = qNUM != null ?
                new ObjectParameter("QNUM", qNUM) :
                new ObjectParameter("QNUM", typeof(string));
    
            var qDATEParameter = qDATE.HasValue ?
                new ObjectParameter("QDATE", qDATE) :
                new ObjectParameter("QDATE", typeof(System.DateTime));
    
            var pAYMENTTERMSParameter = pAYMENTTERMS != null ?
                new ObjectParameter("PAYMENTTERMS", pAYMENTTERMS) :
                new ObjectParameter("PAYMENTTERMS", typeof(string));
    
            var oRDERDATEParameter = oRDERDATE.HasValue ?
                new ObjectParameter("ORDERDATE", oRDERDATE) :
                new ObjectParameter("ORDERDATE", typeof(System.DateTime));
    
            var rEQUIREDATEParameter = rEQUIREDATE.HasValue ?
                new ObjectParameter("REQUIREDATE", rEQUIREDATE) :
                new ObjectParameter("REQUIREDATE", typeof(System.DateTime));
    
            var vENDORDATEParameter = vENDORDATE.HasValue ?
                new ObjectParameter("VENDORDATE", vENDORDATE) :
                new ObjectParameter("VENDORDATE", typeof(System.DateTime));
    
            var pOTYPEParameter = pOTYPE != null ?
                new ObjectParameter("POTYPE", pOTYPE) :
                new ObjectParameter("POTYPE", typeof(string));
    
            var oRIGINALPONUMParameter = oRIGINALPONUM != null ?
                new ObjectParameter("ORIGINALPONUM", oRIGINALPONUM) :
                new ObjectParameter("ORIGINALPONUM", typeof(string));
    
            var bUYERCODEParameter = bUYERCODE != null ?
                new ObjectParameter("BUYERCODE", bUYERCODE) :
                new ObjectParameter("BUYERCODE", typeof(string));
    
            var bUYERNAMEParameter = bUYERNAME != null ?
                new ObjectParameter("BUYERNAME", bUYERNAME) :
                new ObjectParameter("BUYERNAME", typeof(string));
    
            var vENDORIDParameter = vENDORID.HasValue ?
                new ObjectParameter("VENDORID", vENDORID) :
                new ObjectParameter("VENDORID", typeof(int));
    
            var vENDORNAMEParameter = vENDORNAME != null ?
                new ObjectParameter("VENDORNAME", vENDORNAME) :
                new ObjectParameter("VENDORNAME", typeof(string));
    
            var vENDORADDRParameter = vENDORADDR != null ?
                new ObjectParameter("VENDORADDR", vENDORADDR) :
                new ObjectParameter("VENDORADDR", typeof(string));
    
            var vENDORATTN1NAMEParameter = vENDORATTN1NAME != null ?
                new ObjectParameter("VENDORATTN1NAME", vENDORATTN1NAME) :
                new ObjectParameter("VENDORATTN1NAME", typeof(string));
    
            var vENDORATTN1POSParameter = vENDORATTN1POS != null ?
                new ObjectParameter("VENDORATTN1POS", vENDORATTN1POS) :
                new ObjectParameter("VENDORATTN1POS", typeof(string));
    
            var vENDORATTN1MOBParameter = vENDORATTN1MOB != null ?
                new ObjectParameter("VENDORATTN1MOB", vENDORATTN1MOB) :
                new ObjectParameter("VENDORATTN1MOB", typeof(string));
    
            var vENDORATTN1TELParameter = vENDORATTN1TEL != null ?
                new ObjectParameter("VENDORATTN1TEL", vENDORATTN1TEL) :
                new ObjectParameter("VENDORATTN1TEL", typeof(string));
    
            var vENDORATTN1FAXParameter = vENDORATTN1FAX != null ?
                new ObjectParameter("VENDORATTN1FAX", vENDORATTN1FAX) :
                new ObjectParameter("VENDORATTN1FAX", typeof(string));
    
            var vENDORATTN1EMAILParameter = vENDORATTN1EMAIL != null ?
                new ObjectParameter("VENDORATTN1EMAIL", vENDORATTN1EMAIL) :
                new ObjectParameter("VENDORATTN1EMAIL", typeof(string));
    
            var vENDORATTN2NAMEParameter = vENDORATTN2NAME != null ?
                new ObjectParameter("VENDORATTN2NAME", vENDORATTN2NAME) :
                new ObjectParameter("VENDORATTN2NAME", typeof(string));
    
            var vENDORATTN2POSParameter = vENDORATTN2POS != null ?
                new ObjectParameter("VENDORATTN2POS", vENDORATTN2POS) :
                new ObjectParameter("VENDORATTN2POS", typeof(string));
    
            var vENDORATTN2MOBParameter = vENDORATTN2MOB != null ?
                new ObjectParameter("VENDORATTN2MOB", vENDORATTN2MOB) :
                new ObjectParameter("VENDORATTN2MOB", typeof(string));
    
            var vENDORATTN2TELParameter = vENDORATTN2TEL != null ?
                new ObjectParameter("VENDORATTN2TEL", vENDORATTN2TEL) :
                new ObjectParameter("VENDORATTN2TEL", typeof(string));
    
            var vENDORATTN2FAXParameter = vENDORATTN2FAX != null ?
                new ObjectParameter("VENDORATTN2FAX", vENDORATTN2FAX) :
                new ObjectParameter("VENDORATTN2FAX", typeof(string));
    
            var vENDORATTN2EMAILParameter = vENDORATTN2EMAIL != null ?
                new ObjectParameter("VENDORATTN2EMAIL", vENDORATTN2EMAIL) :
                new ObjectParameter("VENDORATTN2EMAIL", typeof(string));
    
            var sHIPTOADDRParameter = sHIPTOADDR != null ?
                new ObjectParameter("SHIPTOADDR", sHIPTOADDR) :
                new ObjectParameter("SHIPTOADDR", typeof(string));
    
            var sHIPTOATTN1NAMEParameter = sHIPTOATTN1NAME != null ?
                new ObjectParameter("SHIPTOATTN1NAME", sHIPTOATTN1NAME) :
                new ObjectParameter("SHIPTOATTN1NAME", typeof(string));
    
            var sHIPTOATTN1MOBParameter = sHIPTOATTN1MOB != null ?
                new ObjectParameter("SHIPTOATTN1MOB", sHIPTOATTN1MOB) :
                new ObjectParameter("SHIPTOATTN1MOB", typeof(string));
    
            var sHIPTOATTN1POSParameter = sHIPTOATTN1POS != null ?
                new ObjectParameter("SHIPTOATTN1POS", sHIPTOATTN1POS) :
                new ObjectParameter("SHIPTOATTN1POS", typeof(string));
    
            var sHIPTOATTN2NAMEParameter = sHIPTOATTN2NAME != null ?
                new ObjectParameter("SHIPTOATTN2NAME", sHIPTOATTN2NAME) :
                new ObjectParameter("SHIPTOATTN2NAME", typeof(string));
    
            var sHIPTOATTN2MOBParameter = sHIPTOATTN2MOB != null ?
                new ObjectParameter("SHIPTOATTN2MOB", sHIPTOATTN2MOB) :
                new ObjectParameter("SHIPTOATTN2MOB", typeof(string));
    
            var sHIPTOATTN2POSParameter = sHIPTOATTN2POS != null ?
                new ObjectParameter("SHIPTOATTN2POS", sHIPTOATTN2POS) :
                new ObjectParameter("SHIPTOATTN2POS", typeof(string));
    
            var tOTALCOSTParameter = tOTALCOST.HasValue ?
                new ObjectParameter("TOTALCOST", tOTALCOST) :
                new ObjectParameter("TOTALCOST", typeof(decimal));
    
            var lASTMODIFIEDBYParameter = lASTMODIFIEDBY != null ?
                new ObjectParameter("LASTMODIFIEDBY", lASTMODIFIEDBY) :
                new ObjectParameter("LASTMODIFIEDBY", typeof(string));
    
            var cONTRACTREFNUMParameter = cONTRACTREFNUM.HasValue ?
                new ObjectParameter("CONTRACTREFNUM", cONTRACTREFNUM) :
                new ObjectParameter("CONTRACTREFNUM", typeof(int));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var sTATUSDATEParameter = sTATUSDATE.HasValue ?
                new ObjectParameter("STATUSDATE", sTATUSDATE) :
                new ObjectParameter("STATUSDATE", typeof(System.DateTime));
    
            var cURRENCYCODEParameter = cURRENCYCODE != null ?
                new ObjectParameter("CURRENCYCODE", cURRENCYCODE) :
                new ObjectParameter("CURRENCYCODE", typeof(string));
    
            var tOTALTAXParameter = tOTALTAX.HasValue ?
                new ObjectParameter("TOTALTAX", tOTALTAX) :
                new ObjectParameter("TOTALTAX", typeof(decimal));
    
            var pRETAXTOTALParameter = pRETAXTOTAL.HasValue ?
                new ObjectParameter("PRETAXTOTAL", pRETAXTOTAL) :
                new ObjectParameter("PRETAXTOTAL", typeof(decimal));
    
            var iNTNOTEParameter = iNTNOTE != null ?
                new ObjectParameter("INTNOTE", iNTNOTE) :
                new ObjectParameter("INTNOTE", typeof(string));
    
            var eXTNOTEParameter = eXTNOTE != null ?
                new ObjectParameter("EXTNOTE", eXTNOTE) :
                new ObjectParameter("EXTNOTE", typeof(string));
    
            var sENDNOTETOACCTSParameter = sENDNOTETOACCTS.HasValue ?
                new ObjectParameter("SENDNOTETOACCTS", sENDNOTETOACCTS) :
                new ObjectParameter("SENDNOTETOACCTS", typeof(bool));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_EditPO", pONUMParameter, pOREFParameter, pOSIDParameter, pOREVISIONParameter, dESCRIPTIONParameter, oRGCODEParameter, oRGNAMEParameter, pROJECTCODEParameter, pROJECTNAMEParameter, mRNUMParameter, qNUMParameter, qDATEParameter, pAYMENTTERMSParameter, oRDERDATEParameter, rEQUIREDATEParameter, vENDORDATEParameter, pOTYPEParameter, oRIGINALPONUMParameter, bUYERCODEParameter, bUYERNAMEParameter, vENDORIDParameter, vENDORNAMEParameter, vENDORADDRParameter, vENDORATTN1NAMEParameter, vENDORATTN1POSParameter, vENDORATTN1MOBParameter, vENDORATTN1TELParameter, vENDORATTN1FAXParameter, vENDORATTN1EMAILParameter, vENDORATTN2NAMEParameter, vENDORATTN2POSParameter, vENDORATTN2MOBParameter, vENDORATTN2TELParameter, vENDORATTN2FAXParameter, vENDORATTN2EMAILParameter, sHIPTOADDRParameter, sHIPTOATTN1NAMEParameter, sHIPTOATTN1MOBParameter, sHIPTOATTN1POSParameter, sHIPTOATTN2NAMEParameter, sHIPTOATTN2MOBParameter, sHIPTOATTN2POSParameter, tOTALCOSTParameter, lASTMODIFIEDBYParameter, cONTRACTREFNUMParameter, sTATUSParameter, sTATUSDATEParameter, cURRENCYCODEParameter, tOTALTAXParameter, pRETAXTOTALParameter, iNTNOTEParameter, eXTNOTEParameter, sENDNOTETOACCTSParameter, aUTOCOMMITParameter);
        }
    
        public virtual int PO_EditPOLine(Nullable<long> pOLINEID, Nullable<decimal> pONUM, Nullable<short> pOREVISION, Nullable<short> pOLINENUM, string lINETYPE, string cATALOGCODE, string cOSTCODE, string dESCRIPTION, Nullable<decimal> oRDERQTY, string oRDERUNIT, Nullable<decimal> uNITCOST, Nullable<decimal> lINECOST, string iTEMNUM, string mODELNUM, string rEQUESTEDBYCODE, string rEQUESTEDBYNAME, string mANUFACUTRER, string rEMARK, string tAXCODE, Nullable<decimal> tAXRATE, Nullable<decimal> tAXTOTAL, Nullable<bool> tAXED, string rOWSTAMP, string lASTMODIFIEDBY, Nullable<System.DateTime> lASTMODIFIEDDATE, Nullable<bool> aUTOCOMMIT, string sTATUSCODE, Nullable<decimal> rECEIPTTOLERANCE, string sPECIFICATION)
        {
            var pOLINEIDParameter = pOLINEID.HasValue ?
                new ObjectParameter("POLINEID", pOLINEID) :
                new ObjectParameter("POLINEID", typeof(long));
    
            var pONUMParameter = pONUM.HasValue ?
                new ObjectParameter("PONUM", pONUM) :
                new ObjectParameter("PONUM", typeof(decimal));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(short));
    
            var pOLINENUMParameter = pOLINENUM.HasValue ?
                new ObjectParameter("POLINENUM", pOLINENUM) :
                new ObjectParameter("POLINENUM", typeof(short));
    
            var lINETYPEParameter = lINETYPE != null ?
                new ObjectParameter("LINETYPE", lINETYPE) :
                new ObjectParameter("LINETYPE", typeof(string));
    
            var cATALOGCODEParameter = cATALOGCODE != null ?
                new ObjectParameter("CATALOGCODE", cATALOGCODE) :
                new ObjectParameter("CATALOGCODE", typeof(string));
    
            var cOSTCODEParameter = cOSTCODE != null ?
                new ObjectParameter("COSTCODE", cOSTCODE) :
                new ObjectParameter("COSTCODE", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var oRDERQTYParameter = oRDERQTY.HasValue ?
                new ObjectParameter("ORDERQTY", oRDERQTY) :
                new ObjectParameter("ORDERQTY", typeof(decimal));
    
            var oRDERUNITParameter = oRDERUNIT != null ?
                new ObjectParameter("ORDERUNIT", oRDERUNIT) :
                new ObjectParameter("ORDERUNIT", typeof(string));
    
            var uNITCOSTParameter = uNITCOST.HasValue ?
                new ObjectParameter("UNITCOST", uNITCOST) :
                new ObjectParameter("UNITCOST", typeof(decimal));
    
            var lINECOSTParameter = lINECOST.HasValue ?
                new ObjectParameter("LINECOST", lINECOST) :
                new ObjectParameter("LINECOST", typeof(decimal));
    
            var iTEMNUMParameter = iTEMNUM != null ?
                new ObjectParameter("ITEMNUM", iTEMNUM) :
                new ObjectParameter("ITEMNUM", typeof(string));
    
            var mODELNUMParameter = mODELNUM != null ?
                new ObjectParameter("MODELNUM", mODELNUM) :
                new ObjectParameter("MODELNUM", typeof(string));
    
            var rEQUESTEDBYCODEParameter = rEQUESTEDBYCODE != null ?
                new ObjectParameter("REQUESTEDBYCODE", rEQUESTEDBYCODE) :
                new ObjectParameter("REQUESTEDBYCODE", typeof(string));
    
            var rEQUESTEDBYNAMEParameter = rEQUESTEDBYNAME != null ?
                new ObjectParameter("REQUESTEDBYNAME", rEQUESTEDBYNAME) :
                new ObjectParameter("REQUESTEDBYNAME", typeof(string));
    
            var mANUFACUTRERParameter = mANUFACUTRER != null ?
                new ObjectParameter("MANUFACUTRER", mANUFACUTRER) :
                new ObjectParameter("MANUFACUTRER", typeof(string));
    
            var rEMARKParameter = rEMARK != null ?
                new ObjectParameter("REMARK", rEMARK) :
                new ObjectParameter("REMARK", typeof(string));
    
            var tAXCODEParameter = tAXCODE != null ?
                new ObjectParameter("TAXCODE", tAXCODE) :
                new ObjectParameter("TAXCODE", typeof(string));
    
            var tAXRATEParameter = tAXRATE.HasValue ?
                new ObjectParameter("TAXRATE", tAXRATE) :
                new ObjectParameter("TAXRATE", typeof(decimal));
    
            var tAXTOTALParameter = tAXTOTAL.HasValue ?
                new ObjectParameter("TAXTOTAL", tAXTOTAL) :
                new ObjectParameter("TAXTOTAL", typeof(decimal));
    
            var tAXEDParameter = tAXED.HasValue ?
                new ObjectParameter("TAXED", tAXED) :
                new ObjectParameter("TAXED", typeof(bool));
    
            var rOWSTAMPParameter = rOWSTAMP != null ?
                new ObjectParameter("ROWSTAMP", rOWSTAMP) :
                new ObjectParameter("ROWSTAMP", typeof(string));
    
            var lASTMODIFIEDBYParameter = lASTMODIFIEDBY != null ?
                new ObjectParameter("LASTMODIFIEDBY", lASTMODIFIEDBY) :
                new ObjectParameter("LASTMODIFIEDBY", typeof(string));
    
            var lASTMODIFIEDDATEParameter = lASTMODIFIEDDATE.HasValue ?
                new ObjectParameter("LASTMODIFIEDDATE", lASTMODIFIEDDATE) :
                new ObjectParameter("LASTMODIFIEDDATE", typeof(System.DateTime));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            var sTATUSCODEParameter = sTATUSCODE != null ?
                new ObjectParameter("STATUSCODE", sTATUSCODE) :
                new ObjectParameter("STATUSCODE", typeof(string));
    
            var rECEIPTTOLERANCEParameter = rECEIPTTOLERANCE.HasValue ?
                new ObjectParameter("RECEIPTTOLERANCE", rECEIPTTOLERANCE) :
                new ObjectParameter("RECEIPTTOLERANCE", typeof(decimal));
    
            var sPECIFICATIONParameter = sPECIFICATION != null ?
                new ObjectParameter("SPECIFICATION", sPECIFICATION) :
                new ObjectParameter("SPECIFICATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_EditPOLine", pOLINEIDParameter, pONUMParameter, pOREVISIONParameter, pOLINENUMParameter, lINETYPEParameter, cATALOGCODEParameter, cOSTCODEParameter, dESCRIPTIONParameter, oRDERQTYParameter, oRDERUNITParameter, uNITCOSTParameter, lINECOSTParameter, iTEMNUMParameter, mODELNUMParameter, rEQUESTEDBYCODEParameter, rEQUESTEDBYNAMEParameter, mANUFACUTRERParameter, rEMARKParameter, tAXCODEParameter, tAXRATEParameter, tAXTOTALParameter, tAXEDParameter, rOWSTAMPParameter, lASTMODIFIEDBYParameter, lASTMODIFIEDDATEParameter, aUTOCOMMITParameter, sTATUSCODEParameter, rECEIPTTOLERANCEParameter, sPECIFICATIONParameter);
        }
    
        public virtual int PO_EDITPOSignature(string orgCode, Nullable<int> pOSignID, Nullable<int> orderNo, Nullable<decimal> pONum, Nullable<short> pOREVISION, string authority, Nullable<int> designation, string teamMemberCode, string teamMemberName, string modifiedBy, Nullable<bool> aUTOCOMMIT)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("OrgCode", orgCode) :
                new ObjectParameter("OrgCode", typeof(string));
    
            var pOSignIDParameter = pOSignID.HasValue ?
                new ObjectParameter("POSignID", pOSignID) :
                new ObjectParameter("POSignID", typeof(int));
    
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(int));
    
            var pONumParameter = pONum.HasValue ?
                new ObjectParameter("PONum", pONum) :
                new ObjectParameter("PONum", typeof(decimal));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(short));
    
            var authorityParameter = authority != null ?
                new ObjectParameter("Authority", authority) :
                new ObjectParameter("Authority", typeof(string));
    
            var designationParameter = designation.HasValue ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(int));
    
            var teamMemberCodeParameter = teamMemberCode != null ?
                new ObjectParameter("TeamMemberCode", teamMemberCode) :
                new ObjectParameter("TeamMemberCode", typeof(string));
    
            var teamMemberNameParameter = teamMemberName != null ?
                new ObjectParameter("TeamMemberName", teamMemberName) :
                new ObjectParameter("TeamMemberName", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_EDITPOSignature", orgCodeParameter, pOSignIDParameter, orderNoParameter, pONumParameter, pOREVISIONParameter, authorityParameter, designationParameter, teamMemberCodeParameter, teamMemberNameParameter, modifiedByParameter, aUTOCOMMITParameter);
        }
    
        public virtual int PO_GetMaxPOLineNum(Nullable<decimal> iNPUTPONUM, Nullable<short> iNPUTREVISION, ObjectParameter oUTNUM)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(decimal));
    
            var iNPUTREVISIONParameter = iNPUTREVISION.HasValue ?
                new ObjectParameter("INPUTREVISION", iNPUTREVISION) :
                new ObjectParameter("INPUTREVISION", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_GetMaxPOLineNum", iNPUTPONUMParameter, iNPUTREVISIONParameter, oUTNUM);
        }
    
        public virtual int PO_GetNextPORev(Nullable<decimal> iNPUTPONUM, Nullable<short> iNTPUTPOREVISION, ObjectParameter oUTPUTNEXTREV)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(decimal));
    
            var iNTPUTPOREVISIONParameter = iNTPUTPOREVISION.HasValue ?
                new ObjectParameter("INTPUTPOREVISION", iNTPUTPOREVISION) :
                new ObjectParameter("INTPUTPOREVISION", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_GetNextPORev", iNPUTPONUMParameter, iNTPUTPOREVISIONParameter, oUTPUTNEXTREV);
        }
    
        public virtual int PO_GetPOAllowStatusTrns(Nullable<decimal> iNPUTPONUM, Nullable<short> iNPUTPOREV, ObjectParameter oUTPUTPOSTATUSTRNS)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(decimal));
    
            var iNPUTPOREVParameter = iNPUTPOREV.HasValue ?
                new ObjectParameter("INPUTPOREV", iNPUTPOREV) :
                new ObjectParameter("INPUTPOREV", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_GetPOAllowStatusTrns", iNPUTPONUMParameter, iNPUTPOREVParameter, oUTPUTPOSTATUSTRNS);
        }
    
        public virtual ObjectResult<PO_LoadLineTypes_Result> PO_LoadLineTypes(string poNumber)
        {
            var poNumberParameter = poNumber != null ?
                new ObjectParameter("PoNumber", poNumber) :
                new ObjectParameter("PoNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PO_LoadLineTypes_Result>("PO_LoadLineTypes", poNumberParameter);
        }
    
        public virtual int po_report_comparepricesbyitem(Nullable<int> oRGCODE, string pROJECTCODE, Nullable<int> vENDORID, string bUYERCODE, string sTARTDATE, string eNDDATE, string iTEMDESCRIPTION)
        {
            var oRGCODEParameter = oRGCODE.HasValue ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(int));
    
            var pROJECTCODEParameter = pROJECTCODE != null ?
                new ObjectParameter("PROJECTCODE", pROJECTCODE) :
                new ObjectParameter("PROJECTCODE", typeof(string));
    
            var vENDORIDParameter = vENDORID.HasValue ?
                new ObjectParameter("VENDORID", vENDORID) :
                new ObjectParameter("VENDORID", typeof(int));
    
            var bUYERCODEParameter = bUYERCODE != null ?
                new ObjectParameter("BUYERCODE", bUYERCODE) :
                new ObjectParameter("BUYERCODE", typeof(string));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var iTEMDESCRIPTIONParameter = iTEMDESCRIPTION != null ?
                new ObjectParameter("ITEMDESCRIPTION", iTEMDESCRIPTION) :
                new ObjectParameter("ITEMDESCRIPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("po_report_comparepricesbyitem", oRGCODEParameter, pROJECTCODEParameter, vENDORIDParameter, bUYERCODEParameter, sTARTDATEParameter, eNDDATEParameter, iTEMDESCRIPTIONParameter);
        }
    
        public virtual int po_report_podistbybuyer(Nullable<int> oRGCODE, string pROJECTCODE, string sTARTDATE, string eNDDATE)
        {
            var oRGCODEParameter = oRGCODE.HasValue ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(int));
    
            var pROJECTCODEParameter = pROJECTCODE != null ?
                new ObjectParameter("PROJECTCODE", pROJECTCODE) :
                new ObjectParameter("PROJECTCODE", typeof(string));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("po_report_podistbybuyer", oRGCODEParameter, pROJECTCODEParameter, sTARTDATEParameter, eNDDATEParameter);
        }
    
        public virtual int po_report_projectspendbycostcode(Nullable<int> oRGCODE, string pROJECTCODE, string sTARTDATE, string eNDDATE)
        {
            var oRGCODEParameter = oRGCODE.HasValue ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(int));
    
            var pROJECTCODEParameter = pROJECTCODE != null ?
                new ObjectParameter("PROJECTCODE", pROJECTCODE) :
                new ObjectParameter("PROJECTCODE", typeof(string));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("po_report_projectspendbycostcode", oRGCODEParameter, pROJECTCODEParameter, sTARTDATEParameter, eNDDATEParameter);
        }
    
        public virtual int po_report_spendbytopsuppliers(Nullable<int> oRGCODE, string pROJECTCODE, string sTARTDATE, string eNDDATE)
        {
            var oRGCODEParameter = oRGCODE.HasValue ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(int));
    
            var pROJECTCODEParameter = pROJECTCODE != null ?
                new ObjectParameter("PROJECTCODE", pROJECTCODE) :
                new ObjectParameter("PROJECTCODE", typeof(string));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("po_report_spendbytopsuppliers", oRGCODEParameter, pROJECTCODEParameter, sTARTDATEParameter, eNDDATEParameter);
        }
    
        public virtual int po_report_supplierpurhasesummary(Nullable<int> iNPUTVENDORID, string sTARTDATE, string eNDDATE)
        {
            var iNPUTVENDORIDParameter = iNPUTVENDORID.HasValue ?
                new ObjectParameter("INPUTVENDORID", iNPUTVENDORID) :
                new ObjectParameter("INPUTVENDORID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("po_report_supplierpurhasesummary", iNPUTVENDORIDParameter, sTARTDATEParameter, eNDDATEParameter);
        }
    
        public virtual int PO_ResolveContractNum(string iNPUTCONTRACTTYPE, ObjectParameter oUTPUTCONTRACTNUM)
        {
            var iNPUTCONTRACTTYPEParameter = iNPUTCONTRACTTYPE != null ?
                new ObjectParameter("INPUTCONTRACTTYPE", iNPUTCONTRACTTYPE) :
                new ObjectParameter("INPUTCONTRACTTYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_ResolveContractNum", iNPUTCONTRACTTYPEParameter, oUTPUTCONTRACTNUM);
        }
    
        public virtual int PO_ResolvePONUM(ObjectParameter oUTPUTPONUM)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_ResolvePONUM", oUTPUTPONUM);
        }
    
        public virtual int PO_ResolvePORef(Nullable<decimal> iNPUTPONUM, ObjectParameter oUTPUTPOREF)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_ResolvePORef", iNPUTPONUMParameter, oUTPUTPOREF);
        }
    
        public virtual int PO_ValidateLineType(Nullable<decimal> iNPUTPONUM, Nullable<short> iNPUTPOREV, string pOTYPE, ObjectParameter eRRORSTATUS)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(decimal));
    
            var iNPUTPOREVParameter = iNPUTPOREV.HasValue ?
                new ObjectParameter("INPUTPOREV", iNPUTPOREV) :
                new ObjectParameter("INPUTPOREV", typeof(short));
    
            var pOTYPEParameter = pOTYPE != null ?
                new ObjectParameter("POTYPE", pOTYPE) :
                new ObjectParameter("POTYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_ValidateLineType", iNPUTPONUMParameter, iNPUTPOREVParameter, pOTYPEParameter, eRRORSTATUS);
        }
    
        public virtual ObjectResult<PO_ViewPaymentStatus_Result> PO_ViewPaymentStatus(Nullable<decimal> iNPUTPONUM)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PO_ViewPaymentStatus_Result>("PO_ViewPaymentStatus", iNPUTPONUMParameter);
        }
    
        public virtual ObjectResult<PO_ViewPermissionsHistory_Result> PO_ViewPermissionsHistory(Nullable<decimal> iNPUTPONUM)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PO_ViewPermissionsHistory_Result>("PO_ViewPermissionsHistory", iNPUTPONUMParameter);
        }
    
        public virtual ObjectResult<PO_ViewRevisionHistory_Result> PO_ViewRevisionHistory(Nullable<decimal> iNPUTPONUM)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PO_ViewRevisionHistory_Result>("PO_ViewRevisionHistory", iNPUTPONUMParameter);
        }
    
        public virtual ObjectResult<PO_ViewStatusHistory_Result> PO_ViewStatusHistory(Nullable<decimal> iNPUTPONUM, Nullable<short> iNPUTPOREVISION)
        {
            var iNPUTPONUMParameter = iNPUTPONUM.HasValue ?
                new ObjectParameter("INPUTPONUM", iNPUTPONUM) :
                new ObjectParameter("INPUTPONUM", typeof(decimal));
    
            var iNPUTPOREVISIONParameter = iNPUTPOREVISION.HasValue ?
                new ObjectParameter("INPUTPOREVISION", iNPUTPOREVISION) :
                new ObjectParameter("INPUTPOREVISION", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PO_ViewStatusHistory_Result>("PO_ViewStatusHistory", iNPUTPONUMParameter, iNPUTPOREVISIONParameter);
        }
    
        public virtual int SendExpTlicRem(Nullable<System.DateTime> startDate, Nullable<int> numDays, string templateName)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var numDaysParameter = numDays.HasValue ?
                new ObjectParameter("NumDays", numDays) :
                new ObjectParameter("NumDays", typeof(int));
    
            var templateNameParameter = templateName != null ?
                new ObjectParameter("TemplateName", templateName) :
                new ObjectParameter("TemplateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendExpTlicRem", startDateParameter, numDaysParameter, templateNameParameter);
        }
    
        public virtual int SendExpTlicRemExceptions(Nullable<System.DateTime> startDate, string templateName)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var templateNameParameter = templateName != null ?
                new ObjectParameter("TemplateName", templateName) :
                new ObjectParameter("TemplateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendExpTlicRemExceptions", startDateParameter, templateNameParameter);
        }
    
        public virtual int SendSupExpTlicRem()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendSupExpTlicRem");
        }
    
        public virtual int sp_add_Attachment(Nullable<int> ownerID, string ownerTable, string title, string description, string fileName, string fileSize, string fileExtension, string fileURL, string status, string createdBy, Nullable<System.DateTime> creationDateTime, Nullable<bool> aUTOCOMMIT)
        {
            var ownerIDParameter = ownerID.HasValue ?
                new ObjectParameter("OwnerID", ownerID) :
                new ObjectParameter("OwnerID", typeof(int));
    
            var ownerTableParameter = ownerTable != null ?
                new ObjectParameter("OwnerTable", ownerTable) :
                new ObjectParameter("OwnerTable", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var fileSizeParameter = fileSize != null ?
                new ObjectParameter("FileSize", fileSize) :
                new ObjectParameter("FileSize", typeof(string));
    
            var fileExtensionParameter = fileExtension != null ?
                new ObjectParameter("FileExtension", fileExtension) :
                new ObjectParameter("FileExtension", typeof(string));
    
            var fileURLParameter = fileURL != null ?
                new ObjectParameter("FileURL", fileURL) :
                new ObjectParameter("FileURL", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var creationDateTimeParameter = creationDateTime.HasValue ?
                new ObjectParameter("CreationDateTime", creationDateTime) :
                new ObjectParameter("CreationDateTime", typeof(System.DateTime));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_Attachment", ownerIDParameter, ownerTableParameter, titleParameter, descriptionParameter, fileNameParameter, fileSizeParameter, fileExtensionParameter, fileURLParameter, statusParameter, createdByParameter, creationDateTimeParameter, aUTOCOMMITParameter);
        }
    
        public virtual int sp_add_POContract(string oRIGINALCONTRACTNUM, string cONTRACTTYPE, Nullable<System.DateTime> sTARTDATE, Nullable<System.DateTime> eNDDATE, string sUBJECT, Nullable<short> oRGCODE, string oRGNAME, string pROJECTCODE, string pROJECTNAME, Nullable<decimal> tOTALAMOUNT, string sTATUS, Nullable<System.DateTime> sTATUSDATE, Nullable<int> vENDORID, string vENDORNAME, string vENDORADDR, string vENDORATTNNAME, string vENDORATTNPOS, string vENDORATTNMOB, string vENDORATTTEL, string vENDOREMAIL, string bUYERCODE, string bUYERNAME, string cURRENCYCODE, string mASTERCONTRACT, string cREATEDBY, Nullable<System.DateTime> cREATIONDATE, ObjectParameter oUTPUTCONTRACTNUM)
        {
            var oRIGINALCONTRACTNUMParameter = oRIGINALCONTRACTNUM != null ?
                new ObjectParameter("ORIGINALCONTRACTNUM", oRIGINALCONTRACTNUM) :
                new ObjectParameter("ORIGINALCONTRACTNUM", typeof(string));
    
            var cONTRACTTYPEParameter = cONTRACTTYPE != null ?
                new ObjectParameter("CONTRACTTYPE", cONTRACTTYPE) :
                new ObjectParameter("CONTRACTTYPE", typeof(string));
    
            var sTARTDATEParameter = sTARTDATE.HasValue ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(System.DateTime));
    
            var eNDDATEParameter = eNDDATE.HasValue ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(System.DateTime));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var oRGCODEParameter = oRGCODE.HasValue ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(short));
    
            var oRGNAMEParameter = oRGNAME != null ?
                new ObjectParameter("ORGNAME", oRGNAME) :
                new ObjectParameter("ORGNAME", typeof(string));
    
            var pROJECTCODEParameter = pROJECTCODE != null ?
                new ObjectParameter("PROJECTCODE", pROJECTCODE) :
                new ObjectParameter("PROJECTCODE", typeof(string));
    
            var pROJECTNAMEParameter = pROJECTNAME != null ?
                new ObjectParameter("PROJECTNAME", pROJECTNAME) :
                new ObjectParameter("PROJECTNAME", typeof(string));
    
            var tOTALAMOUNTParameter = tOTALAMOUNT.HasValue ?
                new ObjectParameter("TOTALAMOUNT", tOTALAMOUNT) :
                new ObjectParameter("TOTALAMOUNT", typeof(decimal));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var sTATUSDATEParameter = sTATUSDATE.HasValue ?
                new ObjectParameter("STATUSDATE", sTATUSDATE) :
                new ObjectParameter("STATUSDATE", typeof(System.DateTime));
    
            var vENDORIDParameter = vENDORID.HasValue ?
                new ObjectParameter("VENDORID", vENDORID) :
                new ObjectParameter("VENDORID", typeof(int));
    
            var vENDORNAMEParameter = vENDORNAME != null ?
                new ObjectParameter("VENDORNAME", vENDORNAME) :
                new ObjectParameter("VENDORNAME", typeof(string));
    
            var vENDORADDRParameter = vENDORADDR != null ?
                new ObjectParameter("VENDORADDR", vENDORADDR) :
                new ObjectParameter("VENDORADDR", typeof(string));
    
            var vENDORATTNNAMEParameter = vENDORATTNNAME != null ?
                new ObjectParameter("VENDORATTNNAME", vENDORATTNNAME) :
                new ObjectParameter("VENDORATTNNAME", typeof(string));
    
            var vENDORATTNPOSParameter = vENDORATTNPOS != null ?
                new ObjectParameter("VENDORATTNPOS", vENDORATTNPOS) :
                new ObjectParameter("VENDORATTNPOS", typeof(string));
    
            var vENDORATTNMOBParameter = vENDORATTNMOB != null ?
                new ObjectParameter("VENDORATTNMOB", vENDORATTNMOB) :
                new ObjectParameter("VENDORATTNMOB", typeof(string));
    
            var vENDORATTTELParameter = vENDORATTTEL != null ?
                new ObjectParameter("VENDORATTTEL", vENDORATTTEL) :
                new ObjectParameter("VENDORATTTEL", typeof(string));
    
            var vENDOREMAILParameter = vENDOREMAIL != null ?
                new ObjectParameter("VENDOREMAIL", vENDOREMAIL) :
                new ObjectParameter("VENDOREMAIL", typeof(string));
    
            var bUYERCODEParameter = bUYERCODE != null ?
                new ObjectParameter("BUYERCODE", bUYERCODE) :
                new ObjectParameter("BUYERCODE", typeof(string));
    
            var bUYERNAMEParameter = bUYERNAME != null ?
                new ObjectParameter("BUYERNAME", bUYERNAME) :
                new ObjectParameter("BUYERNAME", typeof(string));
    
            var cURRENCYCODEParameter = cURRENCYCODE != null ?
                new ObjectParameter("CURRENCYCODE", cURRENCYCODE) :
                new ObjectParameter("CURRENCYCODE", typeof(string));
    
            var mASTERCONTRACTParameter = mASTERCONTRACT != null ?
                new ObjectParameter("MASTERCONTRACT", mASTERCONTRACT) :
                new ObjectParameter("MASTERCONTRACT", typeof(string));
    
            var cREATEDBYParameter = cREATEDBY != null ?
                new ObjectParameter("CREATEDBY", cREATEDBY) :
                new ObjectParameter("CREATEDBY", typeof(string));
    
            var cREATIONDATEParameter = cREATIONDATE.HasValue ?
                new ObjectParameter("CREATIONDATE", cREATIONDATE) :
                new ObjectParameter("CREATIONDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_POContract", oRIGINALCONTRACTNUMParameter, cONTRACTTYPEParameter, sTARTDATEParameter, eNDDATEParameter, sUBJECTParameter, oRGCODEParameter, oRGNAMEParameter, pROJECTCODEParameter, pROJECTNAMEParameter, tOTALAMOUNTParameter, sTATUSParameter, sTATUSDATEParameter, vENDORIDParameter, vENDORNAMEParameter, vENDORADDRParameter, vENDORATTNNAMEParameter, vENDORATTNPOSParameter, vENDORATTNMOBParameter, vENDORATTTELParameter, vENDOREMAILParameter, bUYERCODEParameter, bUYERNAMEParameter, cURRENCYCODEParameter, mASTERCONTRACTParameter, cREATEDBYParameter, cREATIONDATEParameter, oUTPUTCONTRACTNUM);
        }
    
        public virtual int sp_add_POTemplate(string pOTEMPLATENAME, string pOTEMPLATEDESC, string oRGCODE, string oRGNAME, string pROJECTCODE, string pROJECTNAME, string pAYMENTTERMS, string pOTYPE, string bUYERCODE, string bUYERNAME, Nullable<int> vENDORID, string vENDORNAME, string vENDORADDR, string vENDORATTN1NAME, string vENDORATTN1POS, string vENDORATTN1MOB, string vENDORATTN1TEL, string vENDORATTN1FAX, string vENDORATTN1EMAIL, string vENDORATTN2NAME, string vENDORATTN2POS, string vENDORATTN2MOB, string vENDORATTN2TEL, string vENDORATTN2FAX, string vENDORATTN2EMAIL, string sHIPTOADDR, string sHIPTOATTN1NAME, string sHIPTOATTN1MOB, string sHIPTOATTN1POS, string sHIPTOATTN2NAME, string sHIPTOATTN2MOB, string sHIPTOATTN2POS, string cREATEDBY, Nullable<System.DateTime> cREATIONDATE)
        {
            var pOTEMPLATENAMEParameter = pOTEMPLATENAME != null ?
                new ObjectParameter("POTEMPLATENAME", pOTEMPLATENAME) :
                new ObjectParameter("POTEMPLATENAME", typeof(string));
    
            var pOTEMPLATEDESCParameter = pOTEMPLATEDESC != null ?
                new ObjectParameter("POTEMPLATEDESC", pOTEMPLATEDESC) :
                new ObjectParameter("POTEMPLATEDESC", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var oRGNAMEParameter = oRGNAME != null ?
                new ObjectParameter("ORGNAME", oRGNAME) :
                new ObjectParameter("ORGNAME", typeof(string));
    
            var pROJECTCODEParameter = pROJECTCODE != null ?
                new ObjectParameter("PROJECTCODE", pROJECTCODE) :
                new ObjectParameter("PROJECTCODE", typeof(string));
    
            var pROJECTNAMEParameter = pROJECTNAME != null ?
                new ObjectParameter("PROJECTNAME", pROJECTNAME) :
                new ObjectParameter("PROJECTNAME", typeof(string));
    
            var pAYMENTTERMSParameter = pAYMENTTERMS != null ?
                new ObjectParameter("PAYMENTTERMS", pAYMENTTERMS) :
                new ObjectParameter("PAYMENTTERMS", typeof(string));
    
            var pOTYPEParameter = pOTYPE != null ?
                new ObjectParameter("POTYPE", pOTYPE) :
                new ObjectParameter("POTYPE", typeof(string));
    
            var bUYERCODEParameter = bUYERCODE != null ?
                new ObjectParameter("BUYERCODE", bUYERCODE) :
                new ObjectParameter("BUYERCODE", typeof(string));
    
            var bUYERNAMEParameter = bUYERNAME != null ?
                new ObjectParameter("BUYERNAME", bUYERNAME) :
                new ObjectParameter("BUYERNAME", typeof(string));
    
            var vENDORIDParameter = vENDORID.HasValue ?
                new ObjectParameter("VENDORID", vENDORID) :
                new ObjectParameter("VENDORID", typeof(int));
    
            var vENDORNAMEParameter = vENDORNAME != null ?
                new ObjectParameter("VENDORNAME", vENDORNAME) :
                new ObjectParameter("VENDORNAME", typeof(string));
    
            var vENDORADDRParameter = vENDORADDR != null ?
                new ObjectParameter("VENDORADDR", vENDORADDR) :
                new ObjectParameter("VENDORADDR", typeof(string));
    
            var vENDORATTN1NAMEParameter = vENDORATTN1NAME != null ?
                new ObjectParameter("VENDORATTN1NAME", vENDORATTN1NAME) :
                new ObjectParameter("VENDORATTN1NAME", typeof(string));
    
            var vENDORATTN1POSParameter = vENDORATTN1POS != null ?
                new ObjectParameter("VENDORATTN1POS", vENDORATTN1POS) :
                new ObjectParameter("VENDORATTN1POS", typeof(string));
    
            var vENDORATTN1MOBParameter = vENDORATTN1MOB != null ?
                new ObjectParameter("VENDORATTN1MOB", vENDORATTN1MOB) :
                new ObjectParameter("VENDORATTN1MOB", typeof(string));
    
            var vENDORATTN1TELParameter = vENDORATTN1TEL != null ?
                new ObjectParameter("VENDORATTN1TEL", vENDORATTN1TEL) :
                new ObjectParameter("VENDORATTN1TEL", typeof(string));
    
            var vENDORATTN1FAXParameter = vENDORATTN1FAX != null ?
                new ObjectParameter("VENDORATTN1FAX", vENDORATTN1FAX) :
                new ObjectParameter("VENDORATTN1FAX", typeof(string));
    
            var vENDORATTN1EMAILParameter = vENDORATTN1EMAIL != null ?
                new ObjectParameter("VENDORATTN1EMAIL", vENDORATTN1EMAIL) :
                new ObjectParameter("VENDORATTN1EMAIL", typeof(string));
    
            var vENDORATTN2NAMEParameter = vENDORATTN2NAME != null ?
                new ObjectParameter("VENDORATTN2NAME", vENDORATTN2NAME) :
                new ObjectParameter("VENDORATTN2NAME", typeof(string));
    
            var vENDORATTN2POSParameter = vENDORATTN2POS != null ?
                new ObjectParameter("VENDORATTN2POS", vENDORATTN2POS) :
                new ObjectParameter("VENDORATTN2POS", typeof(string));
    
            var vENDORATTN2MOBParameter = vENDORATTN2MOB != null ?
                new ObjectParameter("VENDORATTN2MOB", vENDORATTN2MOB) :
                new ObjectParameter("VENDORATTN2MOB", typeof(string));
    
            var vENDORATTN2TELParameter = vENDORATTN2TEL != null ?
                new ObjectParameter("VENDORATTN2TEL", vENDORATTN2TEL) :
                new ObjectParameter("VENDORATTN2TEL", typeof(string));
    
            var vENDORATTN2FAXParameter = vENDORATTN2FAX != null ?
                new ObjectParameter("VENDORATTN2FAX", vENDORATTN2FAX) :
                new ObjectParameter("VENDORATTN2FAX", typeof(string));
    
            var vENDORATTN2EMAILParameter = vENDORATTN2EMAIL != null ?
                new ObjectParameter("VENDORATTN2EMAIL", vENDORATTN2EMAIL) :
                new ObjectParameter("VENDORATTN2EMAIL", typeof(string));
    
            var sHIPTOADDRParameter = sHIPTOADDR != null ?
                new ObjectParameter("SHIPTOADDR", sHIPTOADDR) :
                new ObjectParameter("SHIPTOADDR", typeof(string));
    
            var sHIPTOATTN1NAMEParameter = sHIPTOATTN1NAME != null ?
                new ObjectParameter("SHIPTOATTN1NAME", sHIPTOATTN1NAME) :
                new ObjectParameter("SHIPTOATTN1NAME", typeof(string));
    
            var sHIPTOATTN1MOBParameter = sHIPTOATTN1MOB != null ?
                new ObjectParameter("SHIPTOATTN1MOB", sHIPTOATTN1MOB) :
                new ObjectParameter("SHIPTOATTN1MOB", typeof(string));
    
            var sHIPTOATTN1POSParameter = sHIPTOATTN1POS != null ?
                new ObjectParameter("SHIPTOATTN1POS", sHIPTOATTN1POS) :
                new ObjectParameter("SHIPTOATTN1POS", typeof(string));
    
            var sHIPTOATTN2NAMEParameter = sHIPTOATTN2NAME != null ?
                new ObjectParameter("SHIPTOATTN2NAME", sHIPTOATTN2NAME) :
                new ObjectParameter("SHIPTOATTN2NAME", typeof(string));
    
            var sHIPTOATTN2MOBParameter = sHIPTOATTN2MOB != null ?
                new ObjectParameter("SHIPTOATTN2MOB", sHIPTOATTN2MOB) :
                new ObjectParameter("SHIPTOATTN2MOB", typeof(string));
    
            var sHIPTOATTN2POSParameter = sHIPTOATTN2POS != null ?
                new ObjectParameter("SHIPTOATTN2POS", sHIPTOATTN2POS) :
                new ObjectParameter("SHIPTOATTN2POS", typeof(string));
    
            var cREATEDBYParameter = cREATEDBY != null ?
                new ObjectParameter("CREATEDBY", cREATEDBY) :
                new ObjectParameter("CREATEDBY", typeof(string));
    
            var cREATIONDATEParameter = cREATIONDATE.HasValue ?
                new ObjectParameter("CREATIONDATE", cREATIONDATE) :
                new ObjectParameter("CREATIONDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_POTemplate", pOTEMPLATENAMEParameter, pOTEMPLATEDESCParameter, oRGCODEParameter, oRGNAMEParameter, pROJECTCODEParameter, pROJECTNAMEParameter, pAYMENTTERMSParameter, pOTYPEParameter, bUYERCODEParameter, bUYERNAMEParameter, vENDORIDParameter, vENDORNAMEParameter, vENDORADDRParameter, vENDORATTN1NAMEParameter, vENDORATTN1POSParameter, vENDORATTN1MOBParameter, vENDORATTN1TELParameter, vENDORATTN1FAXParameter, vENDORATTN1EMAILParameter, vENDORATTN2NAMEParameter, vENDORATTN2POSParameter, vENDORATTN2MOBParameter, vENDORATTN2TELParameter, vENDORATTN2FAXParameter, vENDORATTN2EMAILParameter, sHIPTOADDRParameter, sHIPTOATTN1NAMEParameter, sHIPTOATTN1MOBParameter, sHIPTOATTN1POSParameter, sHIPTOATTN2NAMEParameter, sHIPTOATTN2MOBParameter, sHIPTOATTN2POSParameter, cREATEDBYParameter, cREATIONDATEParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_delete_Attachment(Nullable<int> attachmentID, Nullable<int> ownerID, string ownerTable, string modifiedBy, Nullable<System.DateTime> modificationDate, Nullable<bool> aUTOCOMMIT)
        {
            var attachmentIDParameter = attachmentID.HasValue ?
                new ObjectParameter("AttachmentID", attachmentID) :
                new ObjectParameter("AttachmentID", typeof(int));
    
            var ownerIDParameter = ownerID.HasValue ?
                new ObjectParameter("OwnerID", ownerID) :
                new ObjectParameter("OwnerID", typeof(int));
    
            var ownerTableParameter = ownerTable != null ?
                new ObjectParameter("OwnerTable", ownerTable) :
                new ObjectParameter("OwnerTable", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var modificationDateParameter = modificationDate.HasValue ?
                new ObjectParameter("ModificationDate", modificationDate) :
                new ObjectParameter("ModificationDate", typeof(System.DateTime));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_Attachment", attachmentIDParameter, ownerIDParameter, ownerTableParameter, modifiedByParameter, modificationDateParameter, aUTOCOMMITParameter);
        }
    
        public virtual int sp_delete_POTemplate(Nullable<int> pOTemplateID, string mODIFIEDBY, Nullable<System.DateTime> mODIFICATIONDATE)
        {
            var pOTemplateIDParameter = pOTemplateID.HasValue ?
                new ObjectParameter("POTemplateID", pOTemplateID) :
                new ObjectParameter("POTemplateID", typeof(int));
    
            var mODIFIEDBYParameter = mODIFIEDBY != null ?
                new ObjectParameter("MODIFIEDBY", mODIFIEDBY) :
                new ObjectParameter("MODIFIEDBY", typeof(string));
    
            var mODIFICATIONDATEParameter = mODIFICATIONDATE.HasValue ?
                new ObjectParameter("MODIFICATIONDATE", mODIFICATIONDATE) :
                new ObjectParameter("MODIFICATIONDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_POTemplate", pOTemplateIDParameter, mODIFIEDBYParameter, mODIFICATIONDATEParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_Edit_POContract(Nullable<int> cONTRACTNUM, string oRIGINALCONTRACTNUM, string cONTRACTTYPE, Nullable<System.DateTime> sTARTDATE, Nullable<System.DateTime> eNDDATE, string sUBJECT, Nullable<short> oRGCODE, string oRGNAME, string pROJECTCODE, string pROJECTNAME, Nullable<decimal> tOTALAMOUNT, string sTATUS, Nullable<System.DateTime> sTATUSDATE, Nullable<int> vENDORID, string vENDORNAME, string vENDORADDR, string vENDORATTNNAME, string vENDORATTNPOS, string vENDORATTNMOB, string vENDORATTTEL, string vENDOREMAIL, string bUYERCODE, string bUYERNAME, string cURRENCYCODE, string mASTERCONTRACT, string mODIFIEDBY, Nullable<System.DateTime> mODIFICATIONDATE)
        {
            var cONTRACTNUMParameter = cONTRACTNUM.HasValue ?
                new ObjectParameter("CONTRACTNUM", cONTRACTNUM) :
                new ObjectParameter("CONTRACTNUM", typeof(int));
    
            var oRIGINALCONTRACTNUMParameter = oRIGINALCONTRACTNUM != null ?
                new ObjectParameter("ORIGINALCONTRACTNUM", oRIGINALCONTRACTNUM) :
                new ObjectParameter("ORIGINALCONTRACTNUM", typeof(string));
    
            var cONTRACTTYPEParameter = cONTRACTTYPE != null ?
                new ObjectParameter("CONTRACTTYPE", cONTRACTTYPE) :
                new ObjectParameter("CONTRACTTYPE", typeof(string));
    
            var sTARTDATEParameter = sTARTDATE.HasValue ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(System.DateTime));
    
            var eNDDATEParameter = eNDDATE.HasValue ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(System.DateTime));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var oRGCODEParameter = oRGCODE.HasValue ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(short));
    
            var oRGNAMEParameter = oRGNAME != null ?
                new ObjectParameter("ORGNAME", oRGNAME) :
                new ObjectParameter("ORGNAME", typeof(string));
    
            var pROJECTCODEParameter = pROJECTCODE != null ?
                new ObjectParameter("PROJECTCODE", pROJECTCODE) :
                new ObjectParameter("PROJECTCODE", typeof(string));
    
            var pROJECTNAMEParameter = pROJECTNAME != null ?
                new ObjectParameter("PROJECTNAME", pROJECTNAME) :
                new ObjectParameter("PROJECTNAME", typeof(string));
    
            var tOTALAMOUNTParameter = tOTALAMOUNT.HasValue ?
                new ObjectParameter("TOTALAMOUNT", tOTALAMOUNT) :
                new ObjectParameter("TOTALAMOUNT", typeof(decimal));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var sTATUSDATEParameter = sTATUSDATE.HasValue ?
                new ObjectParameter("STATUSDATE", sTATUSDATE) :
                new ObjectParameter("STATUSDATE", typeof(System.DateTime));
    
            var vENDORIDParameter = vENDORID.HasValue ?
                new ObjectParameter("VENDORID", vENDORID) :
                new ObjectParameter("VENDORID", typeof(int));
    
            var vENDORNAMEParameter = vENDORNAME != null ?
                new ObjectParameter("VENDORNAME", vENDORNAME) :
                new ObjectParameter("VENDORNAME", typeof(string));
    
            var vENDORADDRParameter = vENDORADDR != null ?
                new ObjectParameter("VENDORADDR", vENDORADDR) :
                new ObjectParameter("VENDORADDR", typeof(string));
    
            var vENDORATTNNAMEParameter = vENDORATTNNAME != null ?
                new ObjectParameter("VENDORATTNNAME", vENDORATTNNAME) :
                new ObjectParameter("VENDORATTNNAME", typeof(string));
    
            var vENDORATTNPOSParameter = vENDORATTNPOS != null ?
                new ObjectParameter("VENDORATTNPOS", vENDORATTNPOS) :
                new ObjectParameter("VENDORATTNPOS", typeof(string));
    
            var vENDORATTNMOBParameter = vENDORATTNMOB != null ?
                new ObjectParameter("VENDORATTNMOB", vENDORATTNMOB) :
                new ObjectParameter("VENDORATTNMOB", typeof(string));
    
            var vENDORATTTELParameter = vENDORATTTEL != null ?
                new ObjectParameter("VENDORATTTEL", vENDORATTTEL) :
                new ObjectParameter("VENDORATTTEL", typeof(string));
    
            var vENDOREMAILParameter = vENDOREMAIL != null ?
                new ObjectParameter("VENDOREMAIL", vENDOREMAIL) :
                new ObjectParameter("VENDOREMAIL", typeof(string));
    
            var bUYERCODEParameter = bUYERCODE != null ?
                new ObjectParameter("BUYERCODE", bUYERCODE) :
                new ObjectParameter("BUYERCODE", typeof(string));
    
            var bUYERNAMEParameter = bUYERNAME != null ?
                new ObjectParameter("BUYERNAME", bUYERNAME) :
                new ObjectParameter("BUYERNAME", typeof(string));
    
            var cURRENCYCODEParameter = cURRENCYCODE != null ?
                new ObjectParameter("CURRENCYCODE", cURRENCYCODE) :
                new ObjectParameter("CURRENCYCODE", typeof(string));
    
            var mASTERCONTRACTParameter = mASTERCONTRACT != null ?
                new ObjectParameter("MASTERCONTRACT", mASTERCONTRACT) :
                new ObjectParameter("MASTERCONTRACT", typeof(string));
    
            var mODIFIEDBYParameter = mODIFIEDBY != null ?
                new ObjectParameter("MODIFIEDBY", mODIFIEDBY) :
                new ObjectParameter("MODIFIEDBY", typeof(string));
    
            var mODIFICATIONDATEParameter = mODIFICATIONDATE.HasValue ?
                new ObjectParameter("MODIFICATIONDATE", mODIFICATIONDATE) :
                new ObjectParameter("MODIFICATIONDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Edit_POContract", cONTRACTNUMParameter, oRIGINALCONTRACTNUMParameter, cONTRACTTYPEParameter, sTARTDATEParameter, eNDDATEParameter, sUBJECTParameter, oRGCODEParameter, oRGNAMEParameter, pROJECTCODEParameter, pROJECTNAMEParameter, tOTALAMOUNTParameter, sTATUSParameter, sTATUSDATEParameter, vENDORIDParameter, vENDORNAMEParameter, vENDORADDRParameter, vENDORATTNNAMEParameter, vENDORATTNPOSParameter, vENDORATTNMOBParameter, vENDORATTTELParameter, vENDOREMAILParameter, bUYERCODEParameter, bUYERNAMEParameter, cURRENCYCODEParameter, mASTERCONTRACTParameter, mODIFIEDBYParameter, mODIFICATIONDATEParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_ListAllPurchaseOrder(Nullable<int> pONUM, string sTATUS, string oRGCODE, Nullable<int> pOREVISION, string pROJECTCODE, string pODESCRIPTION, Nullable<int> vENDORID, string pOTYPE, string bUYER, string pOLINEDESCRIPTION, string cOSTCODE, Nullable<int> cONTRACTREFNUM, string qNUM, string mRNUM, string oRIGINALPONUM, string oRDERBYFROM, string oRDERBYTO)
        {
            var pONUMParameter = pONUM.HasValue ?
                new ObjectParameter("PONUM", pONUM) :
                new ObjectParameter("PONUM", typeof(int));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var pOREVISIONParameter = pOREVISION.HasValue ?
                new ObjectParameter("POREVISION", pOREVISION) :
                new ObjectParameter("POREVISION", typeof(int));
    
            var pROJECTCODEParameter = pROJECTCODE != null ?
                new ObjectParameter("PROJECTCODE", pROJECTCODE) :
                new ObjectParameter("PROJECTCODE", typeof(string));
    
            var pODESCRIPTIONParameter = pODESCRIPTION != null ?
                new ObjectParameter("PODESCRIPTION", pODESCRIPTION) :
                new ObjectParameter("PODESCRIPTION", typeof(string));
    
            var vENDORIDParameter = vENDORID.HasValue ?
                new ObjectParameter("VENDORID", vENDORID) :
                new ObjectParameter("VENDORID", typeof(int));
    
            var pOTYPEParameter = pOTYPE != null ?
                new ObjectParameter("POTYPE", pOTYPE) :
                new ObjectParameter("POTYPE", typeof(string));
    
            var bUYERParameter = bUYER != null ?
                new ObjectParameter("BUYER", bUYER) :
                new ObjectParameter("BUYER", typeof(string));
    
            var pOLINEDESCRIPTIONParameter = pOLINEDESCRIPTION != null ?
                new ObjectParameter("POLINEDESCRIPTION", pOLINEDESCRIPTION) :
                new ObjectParameter("POLINEDESCRIPTION", typeof(string));
    
            var cOSTCODEParameter = cOSTCODE != null ?
                new ObjectParameter("COSTCODE", cOSTCODE) :
                new ObjectParameter("COSTCODE", typeof(string));
    
            var cONTRACTREFNUMParameter = cONTRACTREFNUM.HasValue ?
                new ObjectParameter("CONTRACTREFNUM", cONTRACTREFNUM) :
                new ObjectParameter("CONTRACTREFNUM", typeof(int));
    
            var qNUMParameter = qNUM != null ?
                new ObjectParameter("QNUM", qNUM) :
                new ObjectParameter("QNUM", typeof(string));
    
            var mRNUMParameter = mRNUM != null ?
                new ObjectParameter("MRNUM", mRNUM) :
                new ObjectParameter("MRNUM", typeof(string));
    
            var oRIGINALPONUMParameter = oRIGINALPONUM != null ?
                new ObjectParameter("ORIGINALPONUM", oRIGINALPONUM) :
                new ObjectParameter("ORIGINALPONUM", typeof(string));
    
            var oRDERBYFROMParameter = oRDERBYFROM != null ?
                new ObjectParameter("ORDERBYFROM", oRDERBYFROM) :
                new ObjectParameter("ORDERBYFROM", typeof(string));
    
            var oRDERBYTOParameter = oRDERBYTO != null ?
                new ObjectParameter("ORDERBYTO", oRDERBYTO) :
                new ObjectParameter("ORDERBYTO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ListAllPurchaseOrder", pONUMParameter, sTATUSParameter, oRGCODEParameter, pOREVISIONParameter, pROJECTCODEParameter, pODESCRIPTIONParameter, vENDORIDParameter, pOTYPEParameter, bUYERParameter, pOLINEDESCRIPTIONParameter, cOSTCODEParameter, cONTRACTREFNUMParameter, qNUMParameter, mRNUMParameter, oRIGINALPONUMParameter, oRDERBYFROMParameter, oRDERBYTOParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_update_Attachment(Nullable<int> attachmentID, Nullable<int> ownerID, string ownerTable, string title, string description, string fileName, string fileSize, string fileExtension, string fileURL, string status, string modifiedBy, Nullable<System.DateTime> modificationDate, Nullable<bool> aUTOCOMMIT)
        {
            var attachmentIDParameter = attachmentID.HasValue ?
                new ObjectParameter("AttachmentID", attachmentID) :
                new ObjectParameter("AttachmentID", typeof(int));
    
            var ownerIDParameter = ownerID.HasValue ?
                new ObjectParameter("OwnerID", ownerID) :
                new ObjectParameter("OwnerID", typeof(int));
    
            var ownerTableParameter = ownerTable != null ?
                new ObjectParameter("OwnerTable", ownerTable) :
                new ObjectParameter("OwnerTable", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var fileSizeParameter = fileSize != null ?
                new ObjectParameter("FileSize", fileSize) :
                new ObjectParameter("FileSize", typeof(string));
    
            var fileExtensionParameter = fileExtension != null ?
                new ObjectParameter("FileExtension", fileExtension) :
                new ObjectParameter("FileExtension", typeof(string));
    
            var fileURLParameter = fileURL != null ?
                new ObjectParameter("FileURL", fileURL) :
                new ObjectParameter("FileURL", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var modificationDateParameter = modificationDate.HasValue ?
                new ObjectParameter("ModificationDate", modificationDate) :
                new ObjectParameter("ModificationDate", typeof(System.DateTime));
    
            var aUTOCOMMITParameter = aUTOCOMMIT.HasValue ?
                new ObjectParameter("AUTOCOMMIT", aUTOCOMMIT) :
                new ObjectParameter("AUTOCOMMIT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_Attachment", attachmentIDParameter, ownerIDParameter, ownerTableParameter, titleParameter, descriptionParameter, fileNameParameter, fileSizeParameter, fileExtensionParameter, fileURLParameter, statusParameter, modifiedByParameter, modificationDateParameter, aUTOCOMMITParameter);
        }
    
        public virtual int sp_update_POTemplate(Nullable<int> pOTemplateID, string pOTEMPLATENAME, string pOTEMPLATEDESC, string oRGCODE, string oRGNAME, string pROJECTCODE, string pROJECTNAME, string pAYMENTTERMS, string pOTYPE, string bUYERCODE, string bUYERNAME, Nullable<int> vENDORID, string vENDORNAME, string vENDORADDR, string vENDORATTN1NAME, string vENDORATTN1POS, string vENDORATTN1MOB, string vENDORATTN1TEL, string vENDORATTN1FAX, string vENDORATTN1EMAIL, string vENDORATTN2NAME, string vENDORATTN2POS, string vENDORATTN2MOB, string vENDORATTN2TEL, string vENDORATTN2FAX, string vENDORATTN2EMAIL, string sHIPTOADDR, string sHIPTOATTN1NAME, string sHIPTOATTN1MOB, string sHIPTOATTN1POS, string sHIPTOATTN2NAME, string sHIPTOATTN2MOB, string sHIPTOATTN2POS, string mODIFIEDBY, Nullable<System.DateTime> mODIFICATIONDATE)
        {
            var pOTemplateIDParameter = pOTemplateID.HasValue ?
                new ObjectParameter("POTemplateID", pOTemplateID) :
                new ObjectParameter("POTemplateID", typeof(int));
    
            var pOTEMPLATENAMEParameter = pOTEMPLATENAME != null ?
                new ObjectParameter("POTEMPLATENAME", pOTEMPLATENAME) :
                new ObjectParameter("POTEMPLATENAME", typeof(string));
    
            var pOTEMPLATEDESCParameter = pOTEMPLATEDESC != null ?
                new ObjectParameter("POTEMPLATEDESC", pOTEMPLATEDESC) :
                new ObjectParameter("POTEMPLATEDESC", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var oRGNAMEParameter = oRGNAME != null ?
                new ObjectParameter("ORGNAME", oRGNAME) :
                new ObjectParameter("ORGNAME", typeof(string));
    
            var pROJECTCODEParameter = pROJECTCODE != null ?
                new ObjectParameter("PROJECTCODE", pROJECTCODE) :
                new ObjectParameter("PROJECTCODE", typeof(string));
    
            var pROJECTNAMEParameter = pROJECTNAME != null ?
                new ObjectParameter("PROJECTNAME", pROJECTNAME) :
                new ObjectParameter("PROJECTNAME", typeof(string));
    
            var pAYMENTTERMSParameter = pAYMENTTERMS != null ?
                new ObjectParameter("PAYMENTTERMS", pAYMENTTERMS) :
                new ObjectParameter("PAYMENTTERMS", typeof(string));
    
            var pOTYPEParameter = pOTYPE != null ?
                new ObjectParameter("POTYPE", pOTYPE) :
                new ObjectParameter("POTYPE", typeof(string));
    
            var bUYERCODEParameter = bUYERCODE != null ?
                new ObjectParameter("BUYERCODE", bUYERCODE) :
                new ObjectParameter("BUYERCODE", typeof(string));
    
            var bUYERNAMEParameter = bUYERNAME != null ?
                new ObjectParameter("BUYERNAME", bUYERNAME) :
                new ObjectParameter("BUYERNAME", typeof(string));
    
            var vENDORIDParameter = vENDORID.HasValue ?
                new ObjectParameter("VENDORID", vENDORID) :
                new ObjectParameter("VENDORID", typeof(int));
    
            var vENDORNAMEParameter = vENDORNAME != null ?
                new ObjectParameter("VENDORNAME", vENDORNAME) :
                new ObjectParameter("VENDORNAME", typeof(string));
    
            var vENDORADDRParameter = vENDORADDR != null ?
                new ObjectParameter("VENDORADDR", vENDORADDR) :
                new ObjectParameter("VENDORADDR", typeof(string));
    
            var vENDORATTN1NAMEParameter = vENDORATTN1NAME != null ?
                new ObjectParameter("VENDORATTN1NAME", vENDORATTN1NAME) :
                new ObjectParameter("VENDORATTN1NAME", typeof(string));
    
            var vENDORATTN1POSParameter = vENDORATTN1POS != null ?
                new ObjectParameter("VENDORATTN1POS", vENDORATTN1POS) :
                new ObjectParameter("VENDORATTN1POS", typeof(string));
    
            var vENDORATTN1MOBParameter = vENDORATTN1MOB != null ?
                new ObjectParameter("VENDORATTN1MOB", vENDORATTN1MOB) :
                new ObjectParameter("VENDORATTN1MOB", typeof(string));
    
            var vENDORATTN1TELParameter = vENDORATTN1TEL != null ?
                new ObjectParameter("VENDORATTN1TEL", vENDORATTN1TEL) :
                new ObjectParameter("VENDORATTN1TEL", typeof(string));
    
            var vENDORATTN1FAXParameter = vENDORATTN1FAX != null ?
                new ObjectParameter("VENDORATTN1FAX", vENDORATTN1FAX) :
                new ObjectParameter("VENDORATTN1FAX", typeof(string));
    
            var vENDORATTN1EMAILParameter = vENDORATTN1EMAIL != null ?
                new ObjectParameter("VENDORATTN1EMAIL", vENDORATTN1EMAIL) :
                new ObjectParameter("VENDORATTN1EMAIL", typeof(string));
    
            var vENDORATTN2NAMEParameter = vENDORATTN2NAME != null ?
                new ObjectParameter("VENDORATTN2NAME", vENDORATTN2NAME) :
                new ObjectParameter("VENDORATTN2NAME", typeof(string));
    
            var vENDORATTN2POSParameter = vENDORATTN2POS != null ?
                new ObjectParameter("VENDORATTN2POS", vENDORATTN2POS) :
                new ObjectParameter("VENDORATTN2POS", typeof(string));
    
            var vENDORATTN2MOBParameter = vENDORATTN2MOB != null ?
                new ObjectParameter("VENDORATTN2MOB", vENDORATTN2MOB) :
                new ObjectParameter("VENDORATTN2MOB", typeof(string));
    
            var vENDORATTN2TELParameter = vENDORATTN2TEL != null ?
                new ObjectParameter("VENDORATTN2TEL", vENDORATTN2TEL) :
                new ObjectParameter("VENDORATTN2TEL", typeof(string));
    
            var vENDORATTN2FAXParameter = vENDORATTN2FAX != null ?
                new ObjectParameter("VENDORATTN2FAX", vENDORATTN2FAX) :
                new ObjectParameter("VENDORATTN2FAX", typeof(string));
    
            var vENDORATTN2EMAILParameter = vENDORATTN2EMAIL != null ?
                new ObjectParameter("VENDORATTN2EMAIL", vENDORATTN2EMAIL) :
                new ObjectParameter("VENDORATTN2EMAIL", typeof(string));
    
            var sHIPTOADDRParameter = sHIPTOADDR != null ?
                new ObjectParameter("SHIPTOADDR", sHIPTOADDR) :
                new ObjectParameter("SHIPTOADDR", typeof(string));
    
            var sHIPTOATTN1NAMEParameter = sHIPTOATTN1NAME != null ?
                new ObjectParameter("SHIPTOATTN1NAME", sHIPTOATTN1NAME) :
                new ObjectParameter("SHIPTOATTN1NAME", typeof(string));
    
            var sHIPTOATTN1MOBParameter = sHIPTOATTN1MOB != null ?
                new ObjectParameter("SHIPTOATTN1MOB", sHIPTOATTN1MOB) :
                new ObjectParameter("SHIPTOATTN1MOB", typeof(string));
    
            var sHIPTOATTN1POSParameter = sHIPTOATTN1POS != null ?
                new ObjectParameter("SHIPTOATTN1POS", sHIPTOATTN1POS) :
                new ObjectParameter("SHIPTOATTN1POS", typeof(string));
    
            var sHIPTOATTN2NAMEParameter = sHIPTOATTN2NAME != null ?
                new ObjectParameter("SHIPTOATTN2NAME", sHIPTOATTN2NAME) :
                new ObjectParameter("SHIPTOATTN2NAME", typeof(string));
    
            var sHIPTOATTN2MOBParameter = sHIPTOATTN2MOB != null ?
                new ObjectParameter("SHIPTOATTN2MOB", sHIPTOATTN2MOB) :
                new ObjectParameter("SHIPTOATTN2MOB", typeof(string));
    
            var sHIPTOATTN2POSParameter = sHIPTOATTN2POS != null ?
                new ObjectParameter("SHIPTOATTN2POS", sHIPTOATTN2POS) :
                new ObjectParameter("SHIPTOATTN2POS", typeof(string));
    
            var mODIFIEDBYParameter = mODIFIEDBY != null ?
                new ObjectParameter("MODIFIEDBY", mODIFIEDBY) :
                new ObjectParameter("MODIFIEDBY", typeof(string));
    
            var mODIFICATIONDATEParameter = mODIFICATIONDATE.HasValue ?
                new ObjectParameter("MODIFICATIONDATE", mODIFICATIONDATE) :
                new ObjectParameter("MODIFICATIONDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_POTemplate", pOTemplateIDParameter, pOTEMPLATENAMEParameter, pOTEMPLATEDESCParameter, oRGCODEParameter, oRGNAMEParameter, pROJECTCODEParameter, pROJECTNAMEParameter, pAYMENTTERMSParameter, pOTYPEParameter, bUYERCODEParameter, bUYERNAMEParameter, vENDORIDParameter, vENDORNAMEParameter, vENDORADDRParameter, vENDORATTN1NAMEParameter, vENDORATTN1POSParameter, vENDORATTN1MOBParameter, vENDORATTN1TELParameter, vENDORATTN1FAXParameter, vENDORATTN1EMAILParameter, vENDORATTN2NAMEParameter, vENDORATTN2POSParameter, vENDORATTN2MOBParameter, vENDORATTN2TELParameter, vENDORATTN2FAXParameter, vENDORATTN2EMAILParameter, sHIPTOADDRParameter, sHIPTOATTN1NAMEParameter, sHIPTOATTN1MOBParameter, sHIPTOATTN1POSParameter, sHIPTOATTN2NAMEParameter, sHIPTOATTN2MOBParameter, sHIPTOATTN2POSParameter, mODIFIEDBYParameter, mODIFICATIONDATEParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
